"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["9659"],{1197:function(s,a,n){n.r(a),n.d(a,{default:function(){return e}});var t=n(1147);let l=["innerHTML"],e={setup:()=>({html:""}),render:()=>((0,t.wg)(),(0,t.iD)("div",{class:"mi-doc-markdown-body",innerHTML:'<h1>Lazyload 懒加载</h1>\n<div class="mi-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>当页面需要加载大量内容时，使用懒加载可以实现延迟加载页面可视区域外的内容，从而使页面加载更流畅。</p>\n</div><div class="mi-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3>\n<p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce" target="_blank">组件注册</a>。</p>\n<p><code>Lazyload</code> 是 <code>Vue</code> 指令，使用前需要对指令进行注册。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Lazyload</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Lazyload</span>);\n\n<span class="hljs-comment">// 注册时可以配置额外的选项</span>\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Lazyload</span>, {\n    <span class="hljs-attr">lazyComponent</span>: <span class="hljs-literal">true</span>,\n});\n</code></pre>\n</div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2>\n<div class="mi-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3>\n<p>将 <code>v-lazy</code> 指令的值设置为你需要懒加载的图片。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;img in imageList&quot;</span> <span class="hljs-attr">v-lazy</span>=<span class="hljs-string">&quot;img&quot;</span> /&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">return</span> {\n            <span class="hljs-attr">imageList</span>: [\n                <span class="hljs-string">&#x27;https://cdn.jsdelivr.net/gh/wuxingxi888/CDN_IMG_BED/images/avatar.jpg&#x27;</span>,\n                <span class="hljs-string">&#x27;https://cdn.jsdelivr.net/gh/wuxingxi888/CDN_IMG_BED/images/avatar.jpg&#x27;</span>,\n            ],\n        };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="bei-jing-tu-lan-jia-zai" tabindex="-1">背景图懒加载</h3>\n<p>和图片懒加载不同，背景图懒加载需要使用 <code>v-lazy:background-image</code>，值设置为背景图片的地址，需要注意的是必须声明容器高度。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;img in imageList&quot;</span> <span class="hljs-attr">v-lazy:background-image</span>=<span class="hljs-string">&quot;img&quot;</span> /&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="zu-jian-lan-jia-zai" tabindex="-1">组件懒加载</h3>\n<p>将需要懒加载的组件放在 <code>lazy-component</code> 标签中，即可实现组件懒加载。</p>\n<pre><code class="language-js"><span class="hljs-comment">// 注册时设置`lazyComponent`选项</span>\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Lazyload</span>, {\n    <span class="hljs-attr">lazyComponent</span>: <span class="hljs-literal">true</span>,\n});\n</code></pre>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">lazy-component</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;img in imageList&quot;</span> <span class="hljs-attr">v-lazy</span>=<span class="hljs-string">&quot;img&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">lazy-component</span>&gt;</span>\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="mi-doc-card"><h3 id="options" tabindex="-1">Options</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>loading</td>\n<td>加载时的图片</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>error</td>\n<td>错误时的图片</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>preLoad</td>\n<td>预加载高度的比例</td>\n<td><em>number</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>attempt</td>\n<td>尝试次数</td>\n<td><em>number</em></td>\n<td><code>3</code></td>\n</tr>\n<tr>\n<td>listenEvents</td>\n<td>监听的事件</td>\n<td><em>string[]</em></td>\n<td><code>scroll</code>等</td>\n</tr>\n<tr>\n<td>adapter</td>\n<td>适配器</td>\n<td><em>object</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>filter</td>\n<td>图片 URL 过滤</td>\n<td><em>object</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>lazyComponent</td>\n<td>是否能懒加载模块</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>更多内容请参照：<a href="https://github.com/hilongjw/vue-lazyload" target="_blank">vue-lazyload 官方文档</a></p>\n</blockquote>\n</div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2>\n<div class="mi-doc-card"><h3 id="tong-guo-cdn-yin-ru-miracle-shi-mei-you-zi-dong-zhu-ce-lazyload-zu-jian" tabindex="-1">通过 CDN 引入 Miracle 时，没有自动注册 Lazyload 组件？</h3>\n<p>由于 Lazyload 组件在注册时可以传入一些配置项，所以我们不会自动注册 Lazyload 组件，需要手动进行注册：</p>\n<pre><code class="language-js"><span class="hljs-keyword">const</span> app = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">createApp</span>();\n\napp.<span class="hljs-title function_">use</span>(miracle.<span class="hljs-property">Lazyload</span>, {\n    <span class="hljs-attr">lazyComponent</span>: <span class="hljs-literal">true</span>,\n});\n</code></pre>\n</div>'},null,8,l))}}}]);