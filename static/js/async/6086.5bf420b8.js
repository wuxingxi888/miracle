"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["6086"],{817:function(s,a,n){n.r(a),n.d(a,{default:function(){return p}});var t=n(1147);let l=["innerHTML"],p={setup:()=>({html:""}),render:()=>((0,t.wg)(),(0,t.iD)("div",{class:"mi-doc-markdown-body",innerHTML:'<h1>SwipeCell 滑动单元格</h1>\n<div class="mi-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>可以左右滑动来展示操作按钮的单元格组件。</p>\n</div><div class="mi-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3>\n<p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce" target="_blank">组件注册</a>。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">SwipeCell</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">SwipeCell</span>);\n</code></pre>\n</div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2>\n<div class="mi-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3>\n<p><code>SwipeCell</code> 组件提供了 <code>left</code> 和 <code>right</code> 两个插槽，用于定义两侧滑动区域的内容。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-swipe-cell</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">left</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">square</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;选择&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-cell</span> <span class="hljs-attr">:border</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">square</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;删除&quot;</span> /&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">square</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;收藏&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-swipe-cell</span>&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="zi-ding-yi-nei-rong" tabindex="-1">自定义内容</h3>\n<p><code>SwipeCell</code> 可以嵌套任意内容，比如嵌套一个商品卡片。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-swipe-cell</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-card</span>\n        <span class="hljs-attr">num</span>=<span class="hljs-string">&quot;2&quot;</span>\n        <span class="hljs-attr">price</span>=<span class="hljs-string">&quot;2.00&quot;</span>\n        <span class="hljs-attr">desc</span>=<span class="hljs-string">&quot;描述信息&quot;</span>\n        <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;商品标题&quot;</span>\n        <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;goods-card&quot;</span>\n        <span class="hljs-attr">thumb</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/wuxingxi888/CDN_IMG_BED/avatar.jpg&quot;</span>\n    /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">square</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;删除&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;delete-button&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-swipe-cell</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n    <span class="hljs-selector-class">.goods-card</span> {\n        <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;\n        <span class="hljs-attribute">background-color</span>: @white;\n    }\n\n    <span class="hljs-selector-class">.delete-button</span> {\n        <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;\n    }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="yi-bu-guan-bi" tabindex="-1">异步关闭</h3>\n<p>通过传入 <code>before-close</code> 回调函数，可以自定义两侧滑动内容关闭时的行为。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-swipe-cell</span> <span class="hljs-attr">:before-close</span>=<span class="hljs-string">&quot;beforeClose&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">left</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">square</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;选择&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-cell</span> <span class="hljs-attr">:border</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">square</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;删除&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-swipe-cell</span>&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { showConfirmDialog } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-comment">// position 为关闭时点击的位置</span>\n        <span class="hljs-keyword">const</span> <span class="hljs-title function_">beforeClose</span> = (<span class="hljs-params">{ position }</span>) =&gt; {\n            <span class="hljs-keyword">switch</span> (position) {\n                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;left&#x27;</span>:\n                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;cell&#x27;</span>:\n                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;outside&#x27;</span>:\n                    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;right&#x27;</span>:\n                    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n                        <span class="hljs-title function_">showConfirmDialog</span>({\n                            <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;确定删除吗？&#x27;</span>,\n                        })\n                            .<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">resolve</span>(<span class="hljs-literal">true</span>))\n                            .<span class="hljs-title function_">catch</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">resolve</span>(<span class="hljs-literal">false</span>));\n                    });\n            }\n        };\n\n        <span class="hljs-keyword">return</span> { beforeClose };\n    },\n};\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="mi-doc-card"><h3 id="props" tabindex="-1">Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>标识符，通常为一个唯一的字符串或数字，可以在事件参数中获取到</td>\n<td><em>number | string</em></td>\n<td><code>\'\'</code></td>\n</tr>\n<tr>\n<td>left-width</td>\n<td>指定左侧滑动区域宽度，单位为 <code>px</code></td>\n<td><em>number | string</em></td>\n<td><code>auto</code></td>\n</tr>\n<tr>\n<td>right-width</td>\n<td>指定右侧滑动区域宽度，单位为 <code>px</code></td>\n<td><em>number | string</em></td>\n<td><code>auto</code></td>\n</tr>\n<tr>\n<td>before-close</td>\n<td>关闭前的回调函数，返回 <code>false</code> 可阻止关闭，支持返回 Promise</td>\n<td><em>(args) =&gt; boolean | Promise&lt;boolean&gt;</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>是否禁用滑动</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>stop-propagation</td>\n<td>是否阻止滑动事件冒泡</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="slots" tabindex="-1">Slots</h3>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>default</td>\n<td>默认显示的内容</td>\n</tr>\n<tr>\n<td>left</td>\n<td>左侧滑动区域的内容</td>\n</tr>\n<tr>\n<td>right</td>\n<td>右侧滑动区域的内容</td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="events" tabindex="-1">Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>click</td>\n<td>点击时触发</td>\n<td><em>position: \'left\' | \'right\' | \'cell\' | \'outside\'</em></td>\n</tr>\n<tr>\n<td>open</td>\n<td>打开时触发</td>\n<td><em>{ name: string | number, position: \'left\' | \'right\' }</em></td>\n</tr>\n<tr>\n<td>close</td>\n<td>关闭时触发</td>\n<td><em>{ name: string | number, position: \'left\' | \'right\' | \'cell\' | \'outside\' }</em></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="beforeclose-can-shu" tabindex="-1">beforeClose 参数</h3>\n<p>beforeClose 的第一个参数为对象，对象中包含以下属性：</p>\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>event <code>v4.9.4</code></td>\n<td>触发关闭的事件对象</td>\n<td><em>MouseEvent | TouchEvent</em></td>\n</tr>\n<tr>\n<td>name</td>\n<td>标识符</td>\n<td><em>string | number</em></td>\n</tr>\n<tr>\n<td>position</td>\n<td>关闭时的点击位置</td>\n<td><em>\'left\' | \'right\' | \'cell\' | \'outside\'</em></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3>\n<p>通过 ref 可以获取到 SwipeCell 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa" target="_blank">组件实例方法</a>。</p>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>参数</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>open</td>\n<td>打开单元格侧边栏</td>\n<td>position: <code>left | right</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>close</td>\n<td>收起单元格侧边栏</td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3>\n<p>组件导出以下类型定义：</p>\n<pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n    <span class="hljs-title class_">SwipeCellSide</span>,\n    <span class="hljs-title class_">SwipeCellProps</span>,\n    <span class="hljs-title class_">SwipeCellPosition</span>,\n    <span class="hljs-title class_">SwipeCellInstance</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n</code></pre>\n<p><code>SwipeCellInstance</code> 是组件实例的类型，用法如下：</p>\n<pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">SwipeCellInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">const</span> swipeCellRef = ref&lt;<span class="hljs-title class_">SwipeCellInstance</span>&gt;();\n\nswipeCellRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">close</span>();\n</code></pre>\n</div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2>\n<div class="mi-doc-card"><h3 id="zai-zhuo-mian-duan-wu-fa-cao-zuo-zu-jian" tabindex="-1">在桌面端无法操作组件？</h3>\n<p>参见<a href="#/zh-CN/advanced-usage#zhuo-mian-duan-gua-pei" target="_blank">桌面端适配</a>。</p>\n</div>'},null,8,l))}}}]);