"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["321"],{1428:function(n,a,e){e.r(a),e.d(a,{default:function(){return l}});var s=e(1147);let t=["innerHTML"],l={setup:()=>({html:""}),render:()=>((0,s.wg)(),(0,s.iD)("div",{class:"mi-doc-markdown-body",innerHTML:'<h1>组合式 API</h1>\n<div class="mi-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>Miracle 底层依赖了 <code>@miracle-web/use</code> 包，其中内置了一系列的组合式 API。对于使用了 Miracle 的项目，可以复用这些 API 进行开发。</p>\n</div><div class="mi-doc-card"><h3 id="an-zhuang" tabindex="-1">安装</h3>\n<p>虽然 Miracle 的依赖中已经包含了 <code>@miracle-web/use</code>，但我们仍然推荐显式地安装它：</p>\n<pre><code class="language-shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">with npm</span>\nnpm i @miracle-web/use\n<span class="hljs-meta prompt_">\n# </span><span class="language-bash">with yarn</span>\nyarn add @miracle-web/use\n<span class="hljs-meta prompt_">\n# </span><span class="language-bash">with pnpm</span>\npnpm add @miracle-web/use\n<span class="hljs-meta prompt_">\n# </span><span class="language-bash">with Bun</span>\nbun add @miracle-web/use\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="shi-li" tabindex="-1">示例</h3>\n<p>下面是一个 Miracle 组合式 API 的用法示例，我们从 <code>@miracle-web/use</code> 这个包中引入 <code>useWindowSize</code> 方法，然后进行调用，即可获取到当前 Window 的宽度和高度。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { useWindowSize } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/use&#x27;</span>;\n\n<span class="hljs-keyword">const</span> { width, height } = <span class="hljs-title function_">useWindowSize</span>();\n\n<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(width.<span class="hljs-property">value</span>); <span class="hljs-comment">// -&gt; 窗口宽度</span>\n<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(height.<span class="hljs-property">value</span>); <span class="hljs-comment">// -&gt; 窗口高度</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="api-lie-biao" tabindex="-1">API 列表</h3>\n<p>下面是 Miracle 对外提供的所有组合式 API，点击名称可以查看详细介绍：</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href="#/zh-CN/use-click-away" target="_blank">useClickAway</a></td>\n<td>监听点击元素外部的事件</td>\n</tr>\n<tr>\n<td><a href="#/zh-CN/use-count-down" target="_blank">useCountDown</a></td>\n<td>提供倒计时管理能力</td>\n</tr>\n<tr>\n<td><a href="#/zh-CN/use-custom-field-value" target="_blank">useCustomFieldValue</a></td>\n<td>自定义表单组件中的表单项</td>\n</tr>\n<tr>\n<td><a href="#/zh-CN/use-event-listener" target="_blank">useEventListener</a></td>\n<td>方便地进行事件绑定</td>\n</tr>\n<tr>\n<td><a href="#/zh-CN/use-page-visibility" target="_blank">usePageVisibility</a></td>\n<td>获取页面的可见状态</td>\n</tr>\n<tr>\n<td><a href="#/zh-CN/use-rect" target="_blank">useRect</a></td>\n<td>获取元素的大小及其相对于视口的位置</td>\n</tr>\n<tr>\n<td><a href="#/zh-CN/use-relation" target="_blank">useRelation</a></td>\n<td>建立父子组件之间的关联关系</td>\n</tr>\n<tr>\n<td><a href="#/zh-CN/use-scroll-parent" target="_blank">useScrollParent</a></td>\n<td>获取元素最近的可滚动父元素</td>\n</tr>\n<tr>\n<td><a href="#/zh-CN/use-toggle" target="_blank">useToggle</a></td>\n<td>用于在布尔值之间进行切换</td>\n</tr>\n<tr>\n<td><a href="#/zh-CN/use-window-size" target="_blank">useWindowSize</a></td>\n<td>获取浏览器窗口的视口宽度和高度</td>\n</tr>\n<tr>\n<td><a href="#/zh-CN/use-raf" target="_blank">useRaf</a></td>\n<td>提供requestAnimationFrame管理能力</td>\n</tr>\n</tbody>\n</table>\n</div>'},null,8,t))}}}]);