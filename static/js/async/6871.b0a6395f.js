"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["6871"],{2176:function(n,t,s){s.r(t),s.d(t,{default:function(){return d}});var a=s(1147);let e=["innerHTML"],d={setup:()=>({html:""}),render:()=>((0,a.wg)(),(0,a.iD)("div",{class:"mi-doc-markdown-body",innerHTML:'<h1>Skeleton 骨架屏</h1>\n<div class="mi-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>用于在内容加载过程中展示一组占位图形。</p>\n</div><div class="mi-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3>\n<p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce" target="_blank">组件注册</a>。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> {\n    <span class="hljs-title class_">Skeleton</span>,\n    <span class="hljs-title class_">SkeletonTitle</span>,\n    <span class="hljs-title class_">SkeletonImage</span>,\n    <span class="hljs-title class_">SkeletonAvatar</span>,\n    <span class="hljs-title class_">SkeletonParagraph</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Skeleton</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">SkeletonTitle</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">SkeletonImage</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">SkeletonAvatar</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">SkeletonParagraph</span>);\n</code></pre>\n</div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2>\n<div class="mi-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3>\n<p>通过 <code>title</code> 属性显示标题占位图，通过 <code>row</code> 属性配置占位段落行数。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-skeleton</span> <span class="hljs-attr">title</span> <span class="hljs-attr">:row</span>=<span class="hljs-string">&quot;3&quot;</span> /&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="xian-shi-tou-xiang" tabindex="-1">显示头像</h3>\n<p>通过 <code>avatar</code> 属性显示头像占位图。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-skeleton</span> <span class="hljs-attr">title</span> <span class="hljs-attr">avatar</span> <span class="hljs-attr">:row</span>=<span class="hljs-string">&quot;3&quot;</span> /&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="zhan-shi-zi-zu-jian" tabindex="-1">展示子组件</h3>\n<p>将 <code>loading</code> 属性设置成 <code>false</code> 表示内容加载完成，此时会隐藏占位图，并显示 <code>Skeleton</code> 的子组件。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-skeleton</span> <span class="hljs-attr">title</span> <span class="hljs-attr">avatar</span> <span class="hljs-attr">:row</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">:loading</span>=<span class="hljs-string">&quot;loading&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>实际内容<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-skeleton</span>&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref, onMounted } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> loading = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n\n        <span class="hljs-title function_">onMounted</span>(<span class="hljs-function">() =&gt;</span> {\n            loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n        });\n\n        <span class="hljs-keyword">return</span> {\n            loading,\n        };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="zi-ding-yi-zhan-shi-nei-rong" tabindex="-1">自定义展示内容</h3>\n<p>通过 <code>template</code> 插槽完成自定义内容的展示。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-skeleton</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">template</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ display: &#x27;flex&#x27;, width: &#x27;100%&#x27; }&quot;</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">mi-skeleton-image</span> /&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ flex: 1, marginLeft: &#x27;16px&#x27; }&quot;</span>&gt;</span>\n                <span class="hljs-tag">&lt;<span class="hljs-name">mi-skeleton-paragraph</span> <span class="hljs-attr">row-width</span>=<span class="hljs-string">&quot;60%&quot;</span> /&gt;</span>\n                <span class="hljs-tag">&lt;<span class="hljs-name">mi-skeleton-paragraph</span> /&gt;</span>\n                <span class="hljs-tag">&lt;<span class="hljs-name">mi-skeleton-paragraph</span> /&gt;</span>\n                <span class="hljs-tag">&lt;<span class="hljs-name">mi-skeleton-paragraph</span> /&gt;</span>\n            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-skeleton</span>&gt;</span>\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="mi-doc-card"><h3 id="skeleton-props" tabindex="-1">Skeleton Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>row</td>\n<td>段落占位图行数</td>\n<td><em>number | string</em></td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td>row-width</td>\n<td>段落占位图宽度，可传数组来设置每一行的宽度</td>\n<td><em>number | string |<br>(number | string)[]</em></td>\n<td><code>100%</code></td>\n</tr>\n<tr>\n<td>title</td>\n<td>是否显示标题占位图</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>avatar</td>\n<td>是否显示头像占位图</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>loading</td>\n<td>是否显示骨架屏，传 <code>false</code> 时会展示子组件内容</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>animate</td>\n<td>是否开启动画</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>round</td>\n<td>是否将标题和段落显示为圆角风格</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>title-width</td>\n<td>标题占位图宽度</td>\n<td><em>number | string</em></td>\n<td><code>40%</code></td>\n</tr>\n<tr>\n<td>avatar-size</td>\n<td>头像占位图大小</td>\n<td><em>number | string</em></td>\n<td><code>32px</code></td>\n</tr>\n<tr>\n<td>avatar-shape</td>\n<td>头像占位图形状，可选值为 <code>square</code></td>\n<td><em>string</em></td>\n<td><code>round</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="skeletonparagraph-props" tabindex="-1">SkeletonParagraph Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>round</td>\n<td>是否将段落显示为圆角风格</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>row-width</td>\n<td>段落占位图宽度</td>\n<td><em>string</em></td>\n<td><code>100%</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="skeletontitle-props" tabindex="-1">SkeletonTitle Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>round</td>\n<td>是否将标题显示为圆角风格</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>title-width</td>\n<td>标题占位图宽度</td>\n<td><em>number | string</em></td>\n<td><code>40%</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="skeletonavatar-props" tabindex="-1">SkeletonAvatar Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>avatar-size</td>\n<td>头像占位图大小</td>\n<td><em>number | string</em></td>\n<td><code>32px</code></td>\n</tr>\n<tr>\n<td>avatar-shape</td>\n<td>头像占位图形状，可选值为 <code>square</code></td>\n<td><em>string</em></td>\n<td><code>round</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="skeletonimage-props" tabindex="-1">SkeletonImage Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>image-size</td>\n<td>图片占位图大小</td>\n<td><em>number | string</em></td>\n<td><code>32px</code></td>\n</tr>\n<tr>\n<td>image-shape</td>\n<td>图片占位图形状，可选值为 <code>square</code></td>\n<td><em>string</em></td>\n<td><code>round</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="skeleton-slots" tabindex="-1">Skeleton Slots</h3>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>default</td>\n<td>骨架屏内容</td>\n</tr>\n<tr>\n<td>template</td>\n<td>自定义内容</td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3>\n<p>组件导出以下类型定义：</p>\n<pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n    <span class="hljs-title class_">SkeletonProps</span>,\n    <span class="hljs-title class_">SkeletonImageProps</span>,\n    <span class="hljs-title class_">SkeletonTitleProps</span>,\n    <span class="hljs-title class_">SkeletonImageShape</span>,\n    <span class="hljs-title class_">SkeletonAvatarShape</span>,\n    <span class="hljs-title class_">SkeletonParagraphProps</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n</code></pre>\n</div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2>\n<div class="mi-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3>\n<p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider" target="_blank">ConfigProvider 组件</a>。</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>--mi-skeleton-paragraph-height</td>\n<td><em>16px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-skeleton-paragraph-background</td>\n<td><em>var(--mi-active-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-skeleton-paragraph-margin-top</td>\n<td><em>var(--mi-padding-sm)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-skeleton-title-width</td>\n<td><em>40%</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-skeleton-avatar-size</td>\n<td><em>32px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-skeleton-avatar-background</td>\n<td><em>var(--mi-active-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-skeleton-duration</td>\n<td><em>1.2s</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-skeleton-image-size</td>\n<td><em>96px</em></td>\n<td></td>\n</tr>\n<tr>\n<td>--mi-skeleton-image-radius</td>\n<td><em>24px</em></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div>'},null,8,e))}}}]);