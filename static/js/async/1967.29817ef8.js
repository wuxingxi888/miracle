"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["1967"],{47:function(s,n,a){a.r(n),a.d(n,{default:function(){return p}});var t=a(1147);let l=["innerHTML"],p={setup:()=>({html:""}),render:()=>((0,t.wg)(),(0,t.iD)("div",{class:"mi-doc-markdown-body",innerHTML:'<h1>Picker 选择器</h1>\n<div class="mi-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>提供多个选项集合供用户选择，支持单列选择、多列选择和级联选择，通常与<a href="#/zh-CN/popup" target="_blank">弹出层</a>组件配合使用。</p>\n</div><div class="mi-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3>\n<p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce" target="_blank">组件注册</a>。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Picker</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Picker</span>);\n</code></pre>\n</div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2>\n<div class="mi-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3>\n<h4 id="xuan-xiang-pei-zhi" tabindex="-1">选项配置</h4>\n<p>Picker 组件通过 <code>columns</code> 属性配置选项数据，<code>columns</code> 是一个包含字符串或对象的数组。</p>\n<h4 id="ding-bu-lan" tabindex="-1">顶部栏</h4>\n<p>顶部栏包含标题、确认按钮和取消按钮，点击确认按钮触发 <code>confirm</code> 事件，点击取消按钮触发 <code>cancel</code> 事件。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-picker</span>\n    <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题&quot;</span>\n    <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span>\n    @<span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;onConfirm&quot;</span>\n    @<span class="hljs-attr">cancel</span>=<span class="hljs-string">&quot;onCancel&quot;</span>\n    @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span>\n/&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { showToast } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> columns = [\n            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;杭州&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Hangzhou&#x27;</span> },\n            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;宁波&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Ningbo&#x27;</span> },\n            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;温州&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Wenzhou&#x27;</span> },\n            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;绍兴&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Shaoxing&#x27;</span> },\n            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;湖州&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Huzhou&#x27;</span> },\n        ];\n        <span class="hljs-keyword">const</span> <span class="hljs-title function_">onConfirm</span> = (<span class="hljs-params">{ selectedValues }</span>) =&gt; {\n            <span class="hljs-title function_">showToast</span>(<span class="hljs-string">`当前值: <span class="hljs-subst">${selectedValues.join(<span class="hljs-string">&#x27;,&#x27;</span>)}</span>`</span>);\n        };\n        <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">{ selectedValues }</span>) =&gt; {\n            <span class="hljs-title function_">showToast</span>(<span class="hljs-string">`当前值: <span class="hljs-subst">${selectedValues.join(<span class="hljs-string">&#x27;,&#x27;</span>)}</span>`</span>);\n        };\n        <span class="hljs-keyword">const</span> <span class="hljs-title function_">onCancel</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title function_">showToast</span>(<span class="hljs-string">&#x27;取消&#x27;</span>);\n\n        <span class="hljs-keyword">return</span> {\n            columns,\n            onChange,\n            onCancel,\n            onConfirm,\n        };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="da-pei-dan-chu-ceng-shi-yong" tabindex="-1">搭配弹出层使用</h3>\n<p>在实际场景中，Picker 通常作为用于辅助表单填写，可以搭配 Popup 和 Field 实现该效果。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-field</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;fieldValue&quot;</span>\n    <span class="hljs-attr">is-link</span>\n    <span class="hljs-attr">readonly</span>\n    <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;城市&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;选择城市&quot;</span>\n    @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showPicker = true&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-popup</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showPicker&quot;</span> <span class="hljs-attr">round</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-picker</span>\n        <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span>\n        @<span class="hljs-attr">cancel</span>=<span class="hljs-string">&quot;showPicker = false&quot;</span>\n        @<span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;onConfirm&quot;</span>\n    /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-popup</span>&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> columns = [\n            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;杭州&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Hangzhou&#x27;</span> },\n            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;宁波&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Ningbo&#x27;</span> },\n            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;温州&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Wenzhou&#x27;</span> },\n            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;绍兴&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Shaoxing&#x27;</span> },\n            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;湖州&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Huzhou&#x27;</span> },\n        ];\n        <span class="hljs-keyword">const</span> fieldValue = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#x27;&#x27;</span>);\n        <span class="hljs-keyword">const</span> showPicker = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n\n        <span class="hljs-keyword">const</span> <span class="hljs-title function_">onConfirm</span> = (<span class="hljs-params">{ selectedOptions }</span>) =&gt; {\n            showPicker.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n            fieldValue.<span class="hljs-property">value</span> = selectedOptions[<span class="hljs-number">0</span>].<span class="hljs-property">text</span>;\n        };\n\n        <span class="hljs-keyword">return</span> {\n            columns,\n            onConfirm,\n            fieldValue,\n            showPicker,\n        };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="shuang-xiang-bang-ding" tabindex="-1">双向绑定</h3>\n<p>通过 <code>v-model</code> 可以绑定当前选中项的 <code>values</code>，修改 <code>v-model</code> 绑定的值时，Picker 的选中状态也会随之改变。</p>\n<p><code>v-model</code> 的值是一个数组，数组的第一位对应第一列选中项的 <code>value</code>，第二位对应第二列选中项的 <code>value</code>，以此类推。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-picker</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selectedValues&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题&quot;</span> <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span> /&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { showToast } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> columns = [\n            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;杭州&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Hangzhou&#x27;</span> },\n            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;宁波&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Ningbo&#x27;</span> },\n            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;温州&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Wenzhou&#x27;</span> },\n            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;绍兴&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Shaoxing&#x27;</span> },\n            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;湖州&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Huzhou&#x27;</span> },\n        ];\n        <span class="hljs-keyword">const</span> selectedValues = <span class="hljs-title function_">ref</span>([<span class="hljs-string">&#x27;Wenzhou&#x27;</span>]);\n\n        <span class="hljs-keyword">return</span> {\n            columns,\n            selectedValues,\n        };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="duo-lie-xuan-ze" tabindex="-1">多列选择</h3>\n<p><code>columns</code> 属性可以通过二维数组的形式配置多列选择。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-picker</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题&quot;</span> <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span> /&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> columns = [\n            <span class="hljs-comment">// 第一列</span>\n            [\n                { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;周一&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Monday&#x27;</span> },\n                { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;周二&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Tuesday&#x27;</span> },\n                { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;周三&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Wednesday&#x27;</span> },\n                { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;周四&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Thursday&#x27;</span> },\n                { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;周五&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Friday&#x27;</span> },\n            ],\n            <span class="hljs-comment">// 第二列</span>\n            [\n                { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;上午&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Morning&#x27;</span> },\n                { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;下午&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Afternoon&#x27;</span> },\n                { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;晚上&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Evening&#x27;</span> },\n            ],\n        ];\n\n        <span class="hljs-keyword">return</span> { columns };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="ji-lian-xuan-ze" tabindex="-1">级联选择</h3>\n<p>使用 <code>columns</code> 的 <code>children</code> 字段可以实现选项级联的效果。如果级联层级较多，推荐使用 <a href="#/zh-CN/cascader" target="_blank">Cascader 级联选项组件</a>。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-picker</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题&quot;</span> <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span> /&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> columns = [\n            {\n                <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;浙江&#x27;</span>,\n                <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Zhejiang&#x27;</span>,\n                <span class="hljs-attr">children</span>: [\n                    {\n                        <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;杭州&#x27;</span>,\n                        <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Hangzhou&#x27;</span>,\n                        <span class="hljs-attr">children</span>: [\n                            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;西湖区&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Xihu&#x27;</span> },\n                            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;余杭区&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Yuhang&#x27;</span> },\n                        ],\n                    },\n                    {\n                        <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;温州&#x27;</span>,\n                        <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Wenzhou&#x27;</span>,\n                        <span class="hljs-attr">children</span>: [\n                            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;鹿城区&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Lucheng&#x27;</span> },\n                            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;瓯海区&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Ouhai&#x27;</span> },\n                        ],\n                    },\n                ],\n            },\n            {\n                <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;福建&#x27;</span>,\n                <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Fujian&#x27;</span>,\n                <span class="hljs-attr">children</span>: [\n                    {\n                        <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;福州&#x27;</span>,\n                        <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Fuzhou&#x27;</span>,\n                        <span class="hljs-attr">children</span>: [\n                            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;鼓楼区&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Gulou&#x27;</span> },\n                            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;台江区&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Taijiang&#x27;</span> },\n                        ],\n                    },\n                    {\n                        <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;厦门&#x27;</span>,\n                        <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Xiamen&#x27;</span>,\n                        <span class="hljs-attr">children</span>: [\n                            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;思明区&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Siming&#x27;</span> },\n                            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;海沧区&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Haicang&#x27;</span> },\n                        ],\n                    },\n                ],\n            },\n        ];\n\n        <span class="hljs-keyword">return</span> { columns };\n    },\n};\n</code></pre>\n<blockquote>\n<p>级联选择的数据嵌套深度需要保持一致，如果部分选项没有子选项，可以使用空字符串进行占位。</p>\n</blockquote>\n</div><div class="mi-doc-card"><h3 id="jin-yong-xuan-xiang" tabindex="-1">禁用选项</h3>\n<p>选项可以为对象结构，通过设置 <code>disabled</code> 来禁用该选项。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-picker</span> <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span> /&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> columns = [\n            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;杭州&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Hangzhou&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span> },\n            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;宁波&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Ningbo&#x27;</span> },\n            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;温州&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Wenzhou&#x27;</span> },\n        ];\n        <span class="hljs-keyword">return</span> { columns };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="jia-zai-zhuang-tai" tabindex="-1">加载状态</h3>\n<p>若选择器数据是异步获取的，可以通过 <code>loading</code> 属性显示加载提示。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-picker</span> <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span> <span class="hljs-attr">:loading</span>=<span class="hljs-string">&quot;loading&quot;</span> /&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> columns = <span class="hljs-title function_">ref</span>([]);\n        <span class="hljs-keyword">const</span> loading = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n\n        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n            columns.<span class="hljs-property">value</span> = [{ <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;选项&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;option&#x27;</span> }];\n            loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n        }, <span class="hljs-number">1000</span>);\n\n        <span class="hljs-keyword">return</span> { columns, loading };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="zi-ding-yi-columns-de-jie-gou" tabindex="-1">自定义 Columns 的结构</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-picker</span>\n    <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;标题&quot;</span>\n    <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span>\n    <span class="hljs-attr">:columns-field-names</span>=<span class="hljs-string">&quot;customFieldName&quot;</span>\n/&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> columns = [\n            {\n                <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#x27;浙江&#x27;</span>,\n                <span class="hljs-attr">cities</span>: [\n                    {\n                        <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#x27;杭州&#x27;</span>,\n                        <span class="hljs-attr">cities</span>: [\n                            { <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#x27;西湖区&#x27;</span> },\n                            { <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#x27;余杭区&#x27;</span> },\n                        ],\n                    },\n                    {\n                        <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#x27;温州&#x27;</span>,\n                        <span class="hljs-attr">cities</span>: [\n                            { <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#x27;鹿城区&#x27;</span> },\n                            { <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#x27;瓯海区&#x27;</span> },\n                        ],\n                    },\n                ],\n            },\n            {\n                <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#x27;福建&#x27;</span>,\n                <span class="hljs-attr">cities</span>: [\n                    {\n                        <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#x27;福州&#x27;</span>,\n                        <span class="hljs-attr">cities</span>: [\n                            { <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#x27;鼓楼区&#x27;</span> },\n                            { <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#x27;台江区&#x27;</span> },\n                        ],\n                    },\n                    {\n                        <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#x27;厦门&#x27;</span>,\n                        <span class="hljs-attr">cities</span>: [\n                            { <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#x27;思明区&#x27;</span> },\n                            { <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#x27;海沧区&#x27;</span> },\n                        ],\n                    },\n                ],\n            },\n        ];\n\n        <span class="hljs-keyword">const</span> customFieldName = {\n            <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;cityName&#x27;</span>,\n            <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;cityName&#x27;</span>,\n            <span class="hljs-attr">children</span>: <span class="hljs-string">&#x27;cities&#x27;</span>,\n        };\n\n        <span class="hljs-keyword">return</span> {\n            columns,\n            customFieldName,\n        };\n    },\n};\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="mi-doc-card"><h3 id="props" tabindex="-1">Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>v-model</td>\n<td>当前选中项对应的值</td>\n<td><em>number[] | string[]</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>columns</td>\n<td>对象数组，配置每一列显示的数据</td>\n<td><em>PickerOption[] | PickerOption[][]</em></td>\n<td><code>[]</code></td>\n</tr>\n<tr>\n<td>columns-field-names</td>\n<td>自定义 <code>columns</code> 结构中的字段</td>\n<td><em>object</em></td>\n<td><code>{ text: \'text\', value: \'value\', children: \'children\' }</code></td>\n</tr>\n<tr>\n<td>title</td>\n<td>顶部栏标题</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>confirm-button-text</td>\n<td>确认按钮文字，设置为空字符串可以隐藏按钮</td>\n<td><em>string</em></td>\n<td><code>确认</code></td>\n</tr>\n<tr>\n<td>cancel-button-text</td>\n<td>取消按钮文字，设置为空字符串可以隐藏按钮</td>\n<td><em>string</em></td>\n<td><code>取消</code></td>\n</tr>\n<tr>\n<td>toolbar-position</td>\n<td>顶部栏位置，可选值为 <code>bottom</code></td>\n<td><em>string</em></td>\n<td><code>top</code></td>\n</tr>\n<tr>\n<td>loading</td>\n<td>是否显示加载状态</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>readonly</td>\n<td>是否为只读状态，只读状态下无法切换选项</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>show-toolbar</td>\n<td>是否显示顶部栏</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>allow-html</td>\n<td>是否允许选项内容中渲染 HTML</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>option-height</td>\n<td>选项高度，支持 <code>px</code> <code>vw</code> <code>vh</code> <code>rem</code> 单位，默认 <code>px</code></td>\n<td><em>number | string</em></td>\n<td><code>44</code></td>\n</tr>\n<tr>\n<td>visible-option-num</td>\n<td>可见的选项个数</td>\n<td><em>number | string</em></td>\n<td><code>6</code></td>\n</tr>\n<tr>\n<td>swipe-duration</td>\n<td>快速滑动时惯性滚动的时长，单位 <code>ms</code></td>\n<td><em>number | string</em></td>\n<td><code>1000</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="events" tabindex="-1">Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>confirm</td>\n<td>点击完成按钮时触发</td>\n<td><em>{ selectedValues, selectedOptions, selectedIndexes }</em></td>\n</tr>\n<tr>\n<td>cancel</td>\n<td>点击取消按钮时触发</td>\n<td><em>{ selectedValues, selectedOptions, selectedIndexes }</em></td>\n</tr>\n<tr>\n<td>change</td>\n<td>选中的选项改变时触发</td>\n<td><em>{ selectedValues, selectedOptions, selectedIndexes, columnIndex }</em></td>\n</tr>\n<tr>\n<td>click-option</td>\n<td>点击选项时触发</td>\n<td><em>{ currentOption, selectedValues, selectedOptions, selectedIndexes, columnIndex }</em></td>\n</tr>\n<tr>\n<td>scroll-into <code>v4.2.1</code></td>\n<td>当用户通过点击或拖拽让一个选项滚动到中间的选择区域时触发</td>\n<td><em>{ currentOption, columnIndex }</em></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="slots" tabindex="-1">Slots</h3>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n<th>参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>toolbar</td>\n<td>自定义整个顶部栏的内容</td>\n<td>-</td>\n</tr>\n<tr>\n<td>title</td>\n<td>自定义标题内容</td>\n<td>-</td>\n</tr>\n<tr>\n<td>confirm</td>\n<td>自定义确认按钮内容</td>\n<td>-</td>\n</tr>\n<tr>\n<td>cancel</td>\n<td>自定义取消按钮内容</td>\n<td>-</td>\n</tr>\n<tr>\n<td>option</td>\n<td>自定义选项内容</td>\n<td><em>option: PickerOption, index: number</em></td>\n</tr>\n<tr>\n<td>columns-top</td>\n<td>自定义选项上方内容</td>\n<td>-</td>\n</tr>\n<tr>\n<td>columns-bottom</td>\n<td>自定义选项下方内容</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="pickeroption-shu-ju-jie-gou" tabindex="-1">PickerOption 数据结构</h3>\n<table>\n<thead>\n<tr>\n<th>键名</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>text</td>\n<td>选项文字内容</td>\n<td><em>string | number</em></td>\n</tr>\n<tr>\n<td>value</td>\n<td>选项对应的值</td>\n<td><em>string | number</em></td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>是否禁用选项</td>\n<td><em>boolean</em></td>\n</tr>\n<tr>\n<td>children</td>\n<td>级联选项</td>\n<td><em>PickerOption[]</em></td>\n</tr>\n<tr>\n<td>className</td>\n<td>选项额外类名</td>\n<td><em>string | Array | object</em></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3>\n<p>通过 ref 可以获取到 Picker 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa" target="_blank">组件实例方法</a>。</p>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>参数</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>confirm</td>\n<td>停止惯性滚动并触发 <code>confirm</code> 事件</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>getSelectedOptions</td>\n<td>获取当前选中的选项</td>\n<td>-</td>\n<td><em>(PickerOption | undefined)[]</em></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3>\n<p>组件导出以下类型定义：</p>\n<pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n    <span class="hljs-title class_">PickerProps</span>,\n    <span class="hljs-title class_">PickerColumn</span>,\n    <span class="hljs-title class_">PickerOption</span>,\n    <span class="hljs-title class_">PickerInstance</span>,\n    <span class="hljs-title class_">PickerFieldNames</span>,\n    <span class="hljs-title class_">PickerToolbarPosition</span>,\n    <span class="hljs-title class_">PickerCancelEventParams</span>,\n    <span class="hljs-title class_">PickerChangeEventParams</span>,\n    <span class="hljs-title class_">PickerConfirmEventParams</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n</code></pre>\n<p><code>PickerInstance</code> 是组件实例的类型，用法如下：</p>\n<pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">PickerInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">const</span> pickerRef = ref&lt;<span class="hljs-title class_">PickerInstance</span>&gt;();\n\npickerRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">confirm</span>();\n</code></pre>\n</div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2>\n<div class="mi-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3>\n<p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider" target="_blank">ConfigProvider 组件</a>。</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>--mi-picker-background</td>\n<td><em>var(--mi-background-2)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-picker-toolbar-height</td>\n<td><em>44px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-picker-title-font-size</td>\n<td><em>var(--mi-font-size-lg)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-picker-title-line-height</td>\n<td><em>var(--mi-line-height-md)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-picker-action-padding</td>\n<td><em>0 var(--mi-padding-md)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-picker-action-font-size</td>\n<td><em>var(--mi-font-size-md)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-picker-confirm-action-color</td>\n<td><em>var(--mi-primary-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-picker-cancel-action-color</td>\n<td><em>var(--mi-text-color-2)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-picker-option-padding</td>\n<td><em>0 var(--mi-padding-base)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-picker-option-font-size</td>\n<td><em>var(--mi-font-size-lg)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-picker-option-text-color</td>\n<td><em>var(--mi-text-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-picker-option-disabled-opacity</td>\n<td><em>0.3</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-picker-mask-color</td>\n<td><em>linear-gradient</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-picker-loading-icon-color</td>\n<td><em>var(--mi-primary-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-picker-loading-mask-color</td>\n<td><em>rgba(255, 255, 255, 0.9)</em></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2>\n<div class="mi-doc-card"><h3 id="zai-zhuo-mian-duan-wu-fa-cao-zuo-zu-jian" tabindex="-1">在桌面端无法操作组件？</h3>\n<p>参见<a href="#/zh-CN/advanced-usage#zhuo-mian-duan-gua-pei" target="_blank">桌面端适配</a>。</p>\n</div>'},null,8,l))}}}]);