"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["5168"],{9984:function(s,n,a){a.r(n),a.d(n,{default:function(){return l}});var t=a(1147);let e=["innerHTML"],l={setup:()=>({html:""}),render:()=>((0,t.wg)(),(0,t.iD)("div",{class:"mi-doc-markdown-body",innerHTML:'<h1>DatePicker 日期选择</h1>\n<div class="mi-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>日期选择器，用于选择年、月、日，通常与<a href="#/zh-CN/popup" target="_blank">弹出层</a>组件配合使用。</p>\n</div><div class="mi-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3>\n<p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce" target="_blank">组件注册</a>。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">DatePicker</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">DatePicker</span>);\n</code></pre>\n</div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2>\n<div class="mi-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3>\n<p>通过 <code>v-model</code> 绑定当前选中的日期，通过 <code>min-date</code> 和 <code>max-date</code> 属性来设定可选的时间范围。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-date-picker</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentDate&quot;</span>\n    <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;选择日期&quot;</span>\n    <span class="hljs-attr">:min-date</span>=<span class="hljs-string">&quot;minDate&quot;</span>\n    <span class="hljs-attr">:max-date</span>=<span class="hljs-string">&quot;maxDate&quot;</span>\n/&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> currentDate = <span class="hljs-title function_">ref</span>([<span class="hljs-string">&#x27;2021&#x27;</span>, <span class="hljs-string">&#x27;01&#x27;</span>, <span class="hljs-string">&#x27;01&#x27;</span>]);\n        <span class="hljs-keyword">return</span> {\n            <span class="hljs-attr">minDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2020</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>),\n            <span class="hljs-attr">maxDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2025</span>, <span class="hljs-number">5</span>, <span class="hljs-number">1</span>),\n            currentDate,\n        };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="xuan-xiang-lei-xing" tabindex="-1">选项类型</h3>\n<p>通过 <code>columns-type</code> 属性可以控制选项的类型，支持以任意顺序对 <code>year</code>、<code>month</code> 和 <code>day</code> 进行排列组合。</p>\n<p>比如：</p>\n<ul>\n<li>传入 <code>[\'year\']</code> 来单独选择年份。</li>\n<li>传入 <code>[\'month\']</code> 来单独选择月份。</li>\n<li>传入 <code>[\'year\', \'month\']</code> 来选择年份和月份。</li>\n<li>传入 <code>[\'month\', \'day\']</code> 来选择月份和日期。</li>\n</ul>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-date-picker</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentDate&quot;</span>\n    <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;选择年月&quot;</span>\n    <span class="hljs-attr">:min-date</span>=<span class="hljs-string">&quot;minDate&quot;</span>\n    <span class="hljs-attr">:max-date</span>=<span class="hljs-string">&quot;maxDate&quot;</span>\n    <span class="hljs-attr">:columns-type</span>=<span class="hljs-string">&quot;columnsType&quot;</span>\n/&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> currentDate = <span class="hljs-title function_">ref</span>([<span class="hljs-string">&#x27;2021&#x27;</span>, <span class="hljs-string">&#x27;01&#x27;</span>]);\n        <span class="hljs-keyword">const</span> columnsType = [<span class="hljs-string">&#x27;year&#x27;</span>, <span class="hljs-string">&#x27;month&#x27;</span>];\n        <span class="hljs-keyword">return</span> {\n            <span class="hljs-attr">minDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2020</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>),\n            <span class="hljs-attr">maxDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2025</span>, <span class="hljs-number">5</span>, <span class="hljs-number">1</span>),\n            currentDate,\n            columnsType,\n        };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="ge-shi-hua-xuan-xiang" tabindex="-1">格式化选项</h3>\n<p>通过传入 <code>formatter</code> 函数，可以对选项文字进行格式化处理。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-date-picker</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentDate&quot;</span>\n    <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;选择年月&quot;</span>\n    <span class="hljs-attr">:min-date</span>=<span class="hljs-string">&quot;minDate&quot;</span>\n    <span class="hljs-attr">:max-date</span>=<span class="hljs-string">&quot;maxDate&quot;</span>\n    <span class="hljs-attr">:formatter</span>=<span class="hljs-string">&quot;formatter&quot;</span>\n    <span class="hljs-attr">:columns-type</span>=<span class="hljs-string">&quot;columnsType&quot;</span>\n/&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> currentDate = <span class="hljs-title function_">ref</span>([<span class="hljs-string">&#x27;2021&#x27;</span>, <span class="hljs-string">&#x27;01&#x27;</span>]);\n        <span class="hljs-keyword">const</span> columnsType = [<span class="hljs-string">&#x27;year&#x27;</span>, <span class="hljs-string">&#x27;month&#x27;</span>];\n\n        <span class="hljs-keyword">const</span> <span class="hljs-title function_">formatter</span> = (<span class="hljs-params">type, option</span>) =&gt; {\n            <span class="hljs-keyword">if</span> (type === <span class="hljs-string">&#x27;year&#x27;</span>) {\n                option.<span class="hljs-property">text</span> += <span class="hljs-string">&#x27;年&#x27;</span>;\n            }\n            <span class="hljs-keyword">if</span> (type === <span class="hljs-string">&#x27;month&#x27;</span>) {\n                option.<span class="hljs-property">text</span> += <span class="hljs-string">&#x27;月&#x27;</span>;\n            }\n            <span class="hljs-keyword">return</span> option;\n        };\n\n        <span class="hljs-keyword">return</span> {\n            <span class="hljs-attr">minDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2020</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>),\n            <span class="hljs-attr">maxDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2025</span>, <span class="hljs-number">5</span>, <span class="hljs-number">1</span>),\n            formatter,\n            currentDate,\n            columnsType,\n        };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="guo-lu-xuan-xiang" tabindex="-1">过滤选项</h3>\n<p>通过传入 <code>filter</code> 函数，可以对选项数组进行过滤，实现自定义选项间隔。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-date-picker</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentDate&quot;</span>\n    <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;选择年月&quot;</span>\n    <span class="hljs-attr">:filter</span>=<span class="hljs-string">&quot;filter&quot;</span>\n    <span class="hljs-attr">:min-date</span>=<span class="hljs-string">&quot;minDate&quot;</span>\n    <span class="hljs-attr">:max-date</span>=<span class="hljs-string">&quot;maxDate&quot;</span>\n    <span class="hljs-attr">:columns-type</span>=<span class="hljs-string">&quot;columnsType&quot;</span>\n/&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> currentDate = <span class="hljs-title function_">ref</span>([<span class="hljs-string">&#x27;2021&#x27;</span>, <span class="hljs-string">&#x27;01&#x27;</span>]);\n        <span class="hljs-keyword">const</span> columnsType = [<span class="hljs-string">&#x27;year&#x27;</span>, <span class="hljs-string">&#x27;month&#x27;</span>];\n        <span class="hljs-keyword">const</span> <span class="hljs-title function_">filter</span> = (<span class="hljs-params">type, options</span>) =&gt; {\n            <span class="hljs-keyword">if</span> (type === <span class="hljs-string">&#x27;month&#x27;</span>) {\n                <span class="hljs-keyword">return</span> options.<span class="hljs-title function_">filter</span>(\n                    <span class="hljs-function">(<span class="hljs-params">option</span>) =&gt;</span> <span class="hljs-title class_">Number</span>(option.<span class="hljs-property">value</span>) % <span class="hljs-number">6</span> === <span class="hljs-number">0</span>,\n                );\n            }\n            <span class="hljs-keyword">return</span> options;\n        };\n\n        <span class="hljs-keyword">return</span> {\n            filter,\n            <span class="hljs-attr">minDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2020</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>),\n            <span class="hljs-attr">maxDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2025</span>, <span class="hljs-number">5</span>, <span class="hljs-number">1</span>),\n            currentTime,\n            columnsType,\n        };\n    },\n};\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="mi-doc-card"><h3 id="props" tabindex="-1">Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>v-model</td>\n<td>当前选中的日期</td>\n<td><em>string[]</em></td>\n<td><code>[]</code></td>\n</tr>\n<tr>\n<td>columns-type</td>\n<td>选项类型，由 <code>year</code>、<code>month</code> 和 <code>day</code> 组成的数组</td>\n<td><em>string[]</em></td>\n<td><code>[\'year\', \'month\', \'day\']</code></td>\n</tr>\n<tr>\n<td>min-date</td>\n<td>可选的最小时间，精确到日</td>\n<td><em>Date</em></td>\n<td>十年前</td>\n</tr>\n<tr>\n<td>max-date</td>\n<td>可选的最大时间，精确到日</td>\n<td><em>Date</em></td>\n<td>十年后</td>\n</tr>\n<tr>\n<td>title</td>\n<td>顶部栏标题</td>\n<td><em>string</em></td>\n<td><code>\'\'</code></td>\n</tr>\n<tr>\n<td>confirm-button-text</td>\n<td>确认按钮文字</td>\n<td><em>string</em></td>\n<td><code>确认</code></td>\n</tr>\n<tr>\n<td>cancel-button-text</td>\n<td>取消按钮文字</td>\n<td><em>string</em></td>\n<td><code>取消</code></td>\n</tr>\n<tr>\n<td>show-toolbar</td>\n<td>是否显示顶部栏</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>loading</td>\n<td>是否显示加载状态</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>readonly</td>\n<td>是否为只读状态，只读状态下无法切换选项</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>filter</td>\n<td>选项过滤函数</td>\n<td><em>(type: string, options: PickerOption[]) =&gt; PickerOption[]</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>formatter</td>\n<td>选项格式化函数</td>\n<td><em>(type: string, option: PickerOption) =&gt; PickerOption</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>option-height</td>\n<td>选项高度，支持 <code>px</code> <code>vw</code> <code>vh</code> <code>rem</code> 单位，默认 <code>px</code></td>\n<td><em>number | string</em></td>\n<td><code>44</code></td>\n</tr>\n<tr>\n<td>visible-option-num</td>\n<td>可见的选项个数</td>\n<td><em>number | string</em></td>\n<td><code>6</code></td>\n</tr>\n<tr>\n<td>swipe-duration</td>\n<td>快速滑动时惯性滚动的时长，单位 <code>ms</code></td>\n<td><em>number | string</em></td>\n<td><code>1000</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="events" tabindex="-1">Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>confirm</td>\n<td>点击完成按钮时触发</td>\n<td><em>{ selectedValues, selectedOptions, selectedIndexes }</em></td>\n</tr>\n<tr>\n<td>cancel</td>\n<td>点击取消按钮时触发</td>\n<td><em>{ selectedValues, selectedOptions, selectedIndexes }</em></td>\n</tr>\n<tr>\n<td>change</td>\n<td>选项改变时触发</td>\n<td><em>{ selectedValues, selectedOptions, selectedIndexes, columnIndex }</em></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="slots" tabindex="-1">Slots</h3>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n<th>参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>toolbar</td>\n<td>自定义整个顶部栏的内容</td>\n<td>-</td>\n</tr>\n<tr>\n<td>title</td>\n<td>自定义标题内容</td>\n<td>-</td>\n</tr>\n<tr>\n<td>confirm</td>\n<td>自定义确认按钮内容</td>\n<td>-</td>\n</tr>\n<tr>\n<td>cancel</td>\n<td>自定义取消按钮内容</td>\n<td>-</td>\n</tr>\n<tr>\n<td>option</td>\n<td>自定义选项内容</td>\n<td><em>option: PickerOption, index: number</em></td>\n</tr>\n<tr>\n<td>columns-top</td>\n<td>自定义选项上方内容</td>\n<td>-</td>\n</tr>\n<tr>\n<td>columns-bottom</td>\n<td>自定义选项下方内容</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3>\n<p>通过 ref 可以获取到 Picker 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa" target="_blank">组件实例方法</a>。</p>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>参数</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>confirm</td>\n<td>停止惯性滚动并触发 <code>confirm</code> 事件</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>getSelectedDate</td>\n<td>获取当前选中的日期</td>\n<td>-</td>\n<td><em>string[]</em></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3>\n<p>组件导出以下类型定义：</p>\n<pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n    <span class="hljs-title class_">DatePickerProps</span>,\n    <span class="hljs-title class_">DatePickerColumnType</span>,\n    <span class="hljs-title class_">DatePickerInstance</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n</code></pre>\n<p><code>DatePickerInstance</code> 是组件实例的类型，用法如下：</p>\n<pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">DatePickerInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">const</span> datePickerRef = ref&lt;<span class="hljs-title class_">DatePickerInstance</span>&gt;();\n\ndatePickerRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">confirm</span>();\n</code></pre>\n</div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2>\n<div class="mi-doc-card"><h3 id="she-zhi-min-date-huo-max-date-hou-chu-xian-ye-mian-qia-si-de-qing-kuang" tabindex="-1">设置 min-date 或 max-date 后出现页面卡死的情况？</h3>\n<p>请注意不要在模板中直接使用类似 <code>min-date=&quot;new Date()&quot;</code> 的写法，这样会导致每次渲染组件时传入一个新的 Date 对象，而传入新的数据会触发下一次渲染，从而陷入死循环。</p>\n<p>正确的做法是将 <code>min-date</code> 作为一个数据定义在 <code>data</code> 函数或 <code>setup</code> 中。</p>\n</div><div class="mi-doc-card"><h3 id="zai-ios-xi-tong-shang-chu-shi-hua-zu-jian-shi-bai" tabindex="-1">在 iOS 系统上初始化组件失败？</h3>\n<p>如果你遇到了在 iOS 上无法渲染组件的问题，请确认在创建 Date 对象时没有使用 <code>new Date(\'2020-01-01\')</code> 这样的写法，iOS 不支持以中划线分隔的日期格式，正确写法是 <code>new Date(\'2020/01/01\')</code>。</p>\n<p>对此问题的详细解释：<a href="https://stackoverflow.com/questions/13363673/javascript-date-is-invalid-on-ios" target="_blank">stackoverflow</a>。</p>\n</div><div class="mi-doc-card"><h3 id="zai-zhuo-mian-duan-wu-fa-cao-zuo-zu-jian" tabindex="-1">在桌面端无法操作组件？</h3>\n<p>参见<a href="#/zh-CN/advanced-usage#zhuo-mian-duan-gua-pei" target="_blank">桌面端适配</a>。</p>\n</div>'},null,8,e))}}}]);