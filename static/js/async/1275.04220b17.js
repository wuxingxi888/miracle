"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["1275"],{594:function(n,s,t){t.r(s),t.d(s,{default:function(){return d}});var a=t(1147);let e=["innerHTML"],d={setup:()=>({html:""}),render:()=>((0,a.wg)(),(0,a.iD)("div",{class:"mi-doc-markdown-body",innerHTML:'<h1>ImagePreview 图片预览</h1>\n<div class="mi-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>图片放大预览，支持组件调用和函数调用两种方式。</p>\n</div><div class="mi-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3>\n<p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce" target="_blank">组件注册</a>。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">ImagePreview</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ImagePreview</span>);\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="han-shu-diao-yong" tabindex="-1">函数调用</h3>\n<p>为了便于使用 <code>ImagePreview</code>，Miracle 提供了一系列辅助函数，通过辅助函数可以快速唤起全局的图片预览组件。</p>\n<p>比如使用 <code>showImagePreview</code> 函数，调用后会直接在页面中渲染对应的图片预览组件。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { showImagePreview } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-title function_">showImagePreview</span>([\n    <span class="hljs-string">&#x27;https://cdn.jsdelivr.net/gh/wuxingxi888/CDN_IMG_BED/images/avatar.jpg&#x27;</span>,\n]);\n</code></pre>\n</div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2>\n<div class="mi-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3>\n<p>在调用 <code>showImagePreview</code> 时，直接传入图片数组，即可展示图片预览。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { showImagePreview } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-title function_">showImagePreview</span>([\n    <span class="hljs-string">&#x27;https://cdn.jsdelivr.net/gh/wuxingxi888/CDN_IMG_BED/images/avatar.jpg&#x27;</span>,\n    <span class="hljs-string">&#x27;https://cdn.jsdelivr.net/gh/wuxingxi888/CDN_IMG_BED/images/avatar.jpg&#x27;</span>,\n]);\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="zhi-ding-chu-shi-wei-zhi" tabindex="-1">指定初始位置</h3>\n<p><code>showImagePreview</code> 支持传入配置对象，并通过 <code>startPosition</code> 选项指定图片的初始位置（索引值）。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { showImagePreview } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-title function_">showImagePreview</span>({\n    <span class="hljs-attr">images</span>: [\n        <span class="hljs-string">&#x27;https://cdn.jsdelivr.net/gh/wuxingxi888/CDN_IMG_BED/images/avatar.jpg&#x27;</span>,\n        <span class="hljs-string">&#x27;https://cdn.jsdelivr.net/gh/wuxingxi888/CDN_IMG_BED/images/avatar.jpg&#x27;</span>,\n    ],\n    <span class="hljs-attr">startPosition</span>: <span class="hljs-number">1</span>,\n});\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="zhan-shi-guan-bi-an-niu" tabindex="-1">展示关闭按钮</h3>\n<p>开启 <code>closeable</code> 选项后，会在弹出层的右上角显示关闭图标，并且可以通过 <code>close-icon</code> 属性自定义图标，使用<code>close-icon-position</code> 属性可以自定义图标位置。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { showImagePreview } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-title function_">showImagePreview</span>({\n    <span class="hljs-attr">images</span>: [\n        <span class="hljs-string">&#x27;https://cdn.jsdelivr.net/gh/wuxingxi888/CDN_IMG_BED/images/avatar.jpg&#x27;</span>,\n        <span class="hljs-string">&#x27;https://cdn.jsdelivr.net/gh/wuxingxi888/CDN_IMG_BED/images/avatar.jpg&#x27;</span>,\n    ],\n    <span class="hljs-attr">closeable</span>: <span class="hljs-literal">true</span>,\n});\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="jian-ting-guan-bi-shi-jian" tabindex="-1">监听关闭事件</h3>\n<p>通过 <code>onClose</code> 选项监听图片预览的关闭事件。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { showToast, showImagePreview } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-title function_">showImagePreview</span>({\n    <span class="hljs-attr">images</span>: [\n        <span class="hljs-string">&#x27;https://cdn.jsdelivr.net/gh/wuxingxi888/CDN_IMG_BED/images/avatar.jpg&#x27;</span>,\n        <span class="hljs-string">&#x27;https://cdn.jsdelivr.net/gh/wuxingxi888/CDN_IMG_BED/images/avatar.jpg&#x27;</span>,\n    ],\n    <span class="hljs-title function_">onClose</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-title function_">showToast</span>(<span class="hljs-string">&#x27;关闭&#x27;</span>);\n    },\n});\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="yi-bu-guan-bi" tabindex="-1">异步关闭</h3>\n<p>通过 <code>beforeClose</code> 属性可以传入一个回调函数，在图片预览关闭前进行特定操作。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { showImagePreview } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">const</span> instance = <span class="hljs-title function_">showImagePreview</span>({\n    <span class="hljs-attr">images</span>: [\n        <span class="hljs-string">&#x27;https://cdn.jsdelivr.net/gh/wuxingxi888/CDN_IMG_BED/images/avatar.jpg&#x27;</span>,\n        <span class="hljs-string">&#x27;https://cdn.jsdelivr.net/gh/wuxingxi888/CDN_IMG_BED/images/avatar.jpg&#x27;</span>,\n    ],\n    <span class="hljs-attr">beforeClose</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-literal">false</span>,\n});\n\n<span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n    <span class="hljs-comment">// 调用实例上的 close 方法手动关闭图片预览</span>\n    instance.<span class="hljs-title function_">close</span>();\n}, <span class="hljs-number">2000</span>);\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="shi-yong-imagepreview-zu-jian" tabindex="-1">使用 ImagePreview 组件</h3>\n<p>如果需要在 ImagePreview 内嵌入组件或其他自定义内容，可以直接使用 ImagePreview 组件，并使用 <code>index</code> 插槽进行定制。使用前需要通过 <code>app.use</code> 等方式注册组件。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-image-preview</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">:images</span>=<span class="hljs-string">&quot;images&quot;</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:index</span>&gt;</span>第{{ index + 1 }}页<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-image-preview</span>&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n        <span class="hljs-keyword">const</span> index = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n        <span class="hljs-keyword">const</span> images = [\n            <span class="hljs-string">&#x27;https://cdn.jsdelivr.net/gh/wuxingxi888/CDN_IMG_BED/images/avatar.jpg&#x27;</span>,\n            <span class="hljs-string">&#x27;https://cdn.jsdelivr.net/gh/wuxingxi888/CDN_IMG_BED/images/avatar.jpg&#x27;</span>,\n        ];\n        <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">newIndex</span>) =&gt; {\n            index.<span class="hljs-property">value</span> = newIndex;\n        };\n\n        <span class="hljs-keyword">return</span> {\n            show,\n            index,\n            images,\n            onChange,\n        };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="shi-yong-image-cha-cao" tabindex="-1">使用 image 插槽</h3>\n<p>当以组件调用的方式使用 ImagePreview 时，可以通过 <code>image</code> 插槽来插入自定义的内容，比如展示一个视频内容。在这个例子中，你可以将 <code>close-on-click-image</code> 属性设置为 <code>false</code>，这样当你点击视频时就不会意外关闭预览了。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-image-preview</span>\n    <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n    <span class="hljs-attr">:images</span>=<span class="hljs-string">&quot;images&quot;</span>\n    <span class="hljs-attr">:close-on-click-image</span>=<span class="hljs-string">&quot;false&quot;</span>\n&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">image</span>=<span class="hljs-string">&quot;{ src }&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%;&quot;</span> <span class="hljs-attr">controls</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;src&quot;</span> /&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-image-preview</span>&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n        <span class="hljs-keyword">const</span> images = [\n            <span class="hljs-string">&#x27;https://www.w3school.com.cn/i/movie.ogg&#x27;</span>,\n            <span class="hljs-string">&#x27;https://www.w3school.com.cn/i/movie.ogg&#x27;</span>,\n            <span class="hljs-string">&#x27;https://www.w3school.com.cn/i/movie.ogg&#x27;</span>,\n        ];\n        <span class="hljs-keyword">return</span> {\n            show,\n            images,\n        };\n    },\n};\n</code></pre>\n<p>当你通过 <code>image</code> 插槽自定义图片时，可以通过插槽的参数绑定 <code>style</code> 样式和 <code>onLoad</code> 回调函数，这可以让 <code>&lt;img&gt;</code> 标签支持图片缩放。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-image-preview</span>\n    <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n    <span class="hljs-attr">:images</span>=<span class="hljs-string">&quot;images&quot;</span>\n    <span class="hljs-attr">:close-on-click-image</span>=<span class="hljs-string">&quot;false&quot;</span>\n&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">image</span>=<span class="hljs-string">&quot;{ src, style, onLoad }&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;src&quot;</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;[{ width: &#x27;100%&#x27; }, style]&quot;</span> @<span class="hljs-attr">load</span>=<span class="hljs-string">&quot;onLoad&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-image-preview</span>&gt;</span>\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="mi-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3>\n<p>Miracle 中导出了以下 ImagePreview 相关的辅助函数：</p>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>参数</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>showImagePreview</td>\n<td>展示一个全屏的图片预览组件</td>\n<td><em>string[] | ImagePreviewOptions</em></td>\n<td>ImagePreview 实例</td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="imagepreviewoptions" tabindex="-1">ImagePreviewOptions</h3>\n<p>调用 <code>showImagePreview</code> 方法时，支持传入以下选项：</p>\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>images</td>\n<td>需要预览的图片 URL 数组</td>\n<td><em>string[]</em></td>\n<td><code>[]</code></td>\n</tr>\n<tr>\n<td>startPosition</td>\n<td>图片预览起始位置索引</td>\n<td><em>number | string</em></td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td>swipeDuration</td>\n<td>动画时长，单位为 <code>ms</code></td>\n<td><em>number | string</em></td>\n<td><code>300</code></td>\n</tr>\n<tr>\n<td>showIndex</td>\n<td>是否显示页码</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>showIndicators</td>\n<td>是否显示轮播指示器</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>loop</td>\n<td>是否开启循环播放</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>doubleScale <code>v4.7.2</code></td>\n<td>是否启用双击缩放手势，禁用后，点击时会立即关闭图片预览</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>onClose</td>\n<td>关闭时的回调函数</td>\n<td><em>Function</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>切换图片时的回调函数，回调参数为当前索引</td>\n<td><em>Function</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>onScale</td>\n<td>缩放图片时的回调函数，回调参数为当前索引和当前缩放值组成的对象</td>\n<td><em>Function</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>beforeClose</td>\n<td>关闭前的回调函数，返回 <code>false</code> 可阻止关闭，支持返回 Promise</td>\n<td><em>(active: number) =&gt; boolean | Promise&lt;boolean&gt;</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>closeOnPopstate</td>\n<td>是否在页面回退时自动关闭</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>closeOnClickImage <code>v4.8.3</code></td>\n<td>是否在点击图片后关闭图片预览</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>closeOnClickOverlay <code>v4.6.4</code></td>\n<td>是否在点击遮罩层后关闭图片预览</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>vertical <code>v4.8.6</code></td>\n<td>是否开启纵向手势滑动</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>className</td>\n<td>自定义类名 (应用在图片预览的弹出层)</td>\n<td><em>string | Array | object</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>maxZoom</td>\n<td>手势缩放时，最大缩放比例</td>\n<td><em>number | string</em></td>\n<td><code>3</code></td>\n</tr>\n<tr>\n<td>minZoom</td>\n<td>手势缩放时，最小缩放比例</td>\n<td><em>number | string</em></td>\n<td><code>1/3</code></td>\n</tr>\n<tr>\n<td>closeable</td>\n<td>是否显示关闭图标</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>closeIcon</td>\n<td>关闭图标名称或图片链接</td>\n<td><em>string</em></td>\n<td><code>clear</code></td>\n</tr>\n<tr>\n<td>closeIconPosition</td>\n<td>关闭图标位置，可选值为 <code>top-left</code><br><code>bottom-left</code> <code>bottom-right</code></td>\n<td><em>string</em></td>\n<td><code>top-right</code></td>\n</tr>\n<tr>\n<td>transition</td>\n<td>动画类名，等价于 <a href="https://cn.vuejs.org/api/built-in-components.html#transition" target="_blank">transition</a> 的 <code>name</code> 属性</td>\n<td><em>string</em></td>\n<td><code>mi-fade</code></td>\n</tr>\n<tr>\n<td>overlayClass</td>\n<td>自定义遮罩层类名</td>\n<td><em>string | Array | object</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>overlayStyle</td>\n<td>自定义遮罩层样式</td>\n<td><em>object</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>teleport</td>\n<td>指定挂载的节点，等同于 Teleport 组件的 <a href="https://cn.vuejs.org/api/built-in-components.html#teleport" target="_blank">to 属性</a></td>\n<td><em>string | Element</em></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="props" tabindex="-1">Props</h3>\n<p>通过组件调用 <code>ImagePreview</code> 时，支持以下 Props：</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>v-model:show</td>\n<td>是否展示图片预览</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>images</td>\n<td>需要预览的图片 URL 数组</td>\n<td><em>string[]</em></td>\n<td><code>[]</code></td>\n</tr>\n<tr>\n<td>start-position</td>\n<td>图片预览起始位置索引</td>\n<td><em>number | string</em></td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td>swipe-duration</td>\n<td>动画时长，单位为 ms</td>\n<td><em>number | string</em></td>\n<td><code>300</code></td>\n</tr>\n<tr>\n<td>show-index</td>\n<td>是否显示页码</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>show-indicators</td>\n<td>是否显示轮播指示器</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>loop</td>\n<td>是否开启循环播放</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>double-scale <code>v4.7.2</code></td>\n<td>是否启用双击缩放手势，禁用后，点击时会立即关闭图片预览</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>before-close</td>\n<td>关闭前的回调函数，返回 <code>false</code> 可阻止关闭，支持返回 Promise</td>\n<td><em>(active: number) =&gt; boolean | Promise&lt;boolean&gt;</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>close-on-popstate</td>\n<td>是否在页面回退时自动关闭</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>close-on-click-image <code>v4.8.3</code></td>\n<td>是否在点击图片后关闭图片预览</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>close-on-click-overlay <code>v4.6.4</code></td>\n<td>是否在点击遮罩层后关闭图片预览</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>vertical <code>v4.8.6</code></td>\n<td>是否开启纵向手势滑动</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>class-name</td>\n<td>自定义类名</td>\n<td><em>string | Array | object</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>max-zoom</td>\n<td>手势缩放时，最大缩放比例</td>\n<td><em>number | string</em></td>\n<td><code>3</code></td>\n</tr>\n<tr>\n<td>min-zoom</td>\n<td>手势缩放时，最小缩放比例</td>\n<td><em>number | string</em></td>\n<td><code>1/3</code></td>\n</tr>\n<tr>\n<td>closeable</td>\n<td>是否显示关闭图标</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>close-icon</td>\n<td>关闭图标名称或图片链接</td>\n<td><em>string</em></td>\n<td><code>clear</code></td>\n</tr>\n<tr>\n<td>close-icon-position</td>\n<td>关闭图标位置，可选值为 <code>top-left</code><br><code>bottom-left</code> <code>bottom-right</code></td>\n<td><em>string</em></td>\n<td><code>top-right</code></td>\n</tr>\n<tr>\n<td>transition</td>\n<td>动画类名，等价于 <a href="https://cn.vuejs.org/api/built-in-components.html#transition" target="_blank">transition</a> 的 <code>name</code> 属性</td>\n<td><em>string</em></td>\n<td><code>mi-fade</code></td>\n</tr>\n<tr>\n<td>overlay-class</td>\n<td>自定义遮罩层类名</td>\n<td><em>string | Array | object</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>overlay-style</td>\n<td>自定义遮罩层样式</td>\n<td><em>object</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>teleport</td>\n<td>指定挂载的节点，等同于 Teleport 组件的 <a href="https://cn.vuejs.org/api/built-in-components.html#teleport" target="_blank">to 属性</a></td>\n<td><em>string | Element</em></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="events" tabindex="-1">Events</h3>\n<p>通过组件调用 <code>ImagePreview</code> 时，支持以下事件：</p>\n<table>\n<thead>\n<tr>\n<th>事件名</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>close</td>\n<td>关闭时触发</td>\n<td><em>{ index: number, url: string }</em></td>\n</tr>\n<tr>\n<td>closed</td>\n<td>关闭且且动画结束后触发</td>\n<td>-</td>\n</tr>\n<tr>\n<td>change</td>\n<td>切换当前图片时触发</td>\n<td><em>index: number</em></td>\n</tr>\n<tr>\n<td>scale</td>\n<td>缩放当前图片时触发</td>\n<td><em>{ index: number, scale: number }</em></td>\n</tr>\n<tr>\n<td>long-press</td>\n<td>长按当前图片时触发</td>\n<td><em>{ index: number }</em></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="fang-fa-1" tabindex="-1">方法</h3>\n<p>通过组件调用 <code>ImagePreview</code> 时，通过 ref 可以获取到 ImagePreview 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa" target="_blank">组件实例方法</a>。</p>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>参数</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>resetScale <code>4.7.4</code></td>\n<td>重置当前图片的缩放比</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>swipeTo</td>\n<td>切换到指定位置</td>\n<td><em>index: number, options?: SwipeToOptions</em></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3>\n<p>组件导出以下类型定义：</p>\n<pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n    <span class="hljs-title class_">ImagePreviewProps</span>,\n    <span class="hljs-title class_">ImagePreviewOptions</span>,\n    <span class="hljs-title class_">ImagePreviewInstance</span>,\n    <span class="hljs-title class_">ImagePreviewScaleEventParams</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n</code></pre>\n<p><code>ImagePreviewInstance</code> 是组件实例的类型，用法如下：</p>\n<pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ImagePreviewInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">const</span> imagePreviewRef = ref&lt;<span class="hljs-title class_">ImagePreviewInstance</span>&gt;();\n\nimagePreviewRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">swipeTo</span>(<span class="hljs-number">1</span>);\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="slots" tabindex="-1">Slots</h3>\n<p>通过组件调用 <code>ImagePreview</code> 时，支持以下插槽：</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n<th>参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>index</td>\n<td>自定义页码内容</td>\n<td><em>{ index: 当前图片的索引 }</em></td>\n</tr>\n<tr>\n<td>cover</td>\n<td>自定义覆盖在图片预览上方的内容</td>\n<td>-</td>\n</tr>\n<tr>\n<td>image</td>\n<td>自定义图片内容</td>\n<td><em>{ src: 当前资源地址, onLoad: 加载图片函数, style: 当前图片样式 }</em></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="onclose-hui-diao-can-shu" tabindex="-1">onClose 回调参数</h3>\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>当前图片 URL</td>\n<td><em>string</em></td>\n</tr>\n<tr>\n<td>index</td>\n<td>当前图片的索引值</td>\n<td><em>number</em></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="onscale-hui-diao-can-shu" tabindex="-1">onScale 回调参数</h3>\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>index</td>\n<td>当前图片的索引值</td>\n<td><em>number</em></td>\n</tr>\n<tr>\n<td>scale</td>\n<td>当前图片的缩放值</td>\n<td><em>number</em></td>\n</tr>\n</tbody>\n</table>\n</div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2>\n<div class="mi-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3>\n<p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider" target="_blank">ConfigProvider 组件</a>。</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>--mi-image-preview-index-text-color</td>\n<td><em>var(--mi-white)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-image-preview-index-font-size</td>\n<td><em>var(--mi-font-size-md)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-image-preview-index-line-height</td>\n<td><em>var(--mi-line-height-md)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-image-preview-index-text-shadow</td>\n<td><em>0 1px 1px var(--mi-gray-8)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-image-preview-overlay-background</td>\n<td><em>rgba(0, 0, 0, 0.9)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-image-preview-close-icon-size</td>\n<td><em>22px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-image-preview-close-icon-color</td>\n<td><em>var(--mi-gray-5)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-image-preview-close-icon-margin</td>\n<td><em>var(--mi-padding-md)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-image-preview-close-icon-z-index</td>\n<td><em>1</em></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2>\n<div class="mi-doc-card"><h3 id="zai-zhuo-mian-duan-wu-fa-cao-zuo-zu-jian" tabindex="-1">在桌面端无法操作组件？</h3>\n<p>参见<a href="#/zh-CN/advanced-usage#zhuo-mian-duan-gua-pei" target="_blank">桌面端适配</a>。</p>\n</div><div class="mi-doc-card"><h3 id="yin-yong-showimagepreview-shi-chu-xian-bian-yi-bao-cuo" tabindex="-1">引用 showImagePreview 时出现编译报错？</h3>\n<p>如果引用 <code>showImagePreview</code> 方法时出现以下报错，说明项目中使用了 <code>babel-plugin-import</code> 插件，导致代码被错误编译。</p>\n<pre><code class="language-bash">These dependencies were not found:\n\n* miracle/es/show-image-preview <span class="hljs-keyword">in</span> ./src/xxx.js\n* miracle/es/show-image-preview/style <span class="hljs-keyword">in</span> ./src/xxx.js\n</code></pre>\n</div>'},null,8,e))}}}]);