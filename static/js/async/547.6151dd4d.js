"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["547"],{612:function(n,s,t){t.r(s),t.d(s,{default:function(){return e}});var a=t(1147);let d=["innerHTML"],e={setup:()=>({html:""}),render:()=>((0,a.wg)(),(0,a.iD)("div",{class:"mi-doc-markdown-body",innerHTML:'<h1>Notify 消息提示</h1>\n<div class="mi-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>在页面顶部展示消息提示，支持组件调用和函数调用两种方式。</p>\n</div><div class="mi-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3>\n<p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce" target="_blank">组件注册</a>。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Notify</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Notify</span>);\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="han-shu-diao-yong" tabindex="-1">函数调用</h3>\n<p>为了便于使用 <code>Notify</code>，Miracle 提供了一系列辅助函数，通过辅助函数可以快速唤起全局的消息提示。</p>\n<p>比如使用 <code>showNotify</code> 函数，调用后会直接在页面中渲染对应的提示。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { showNotify } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-title function_">showNotify</span>({ <span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;提示&#x27;</span> });\n</code></pre>\n</div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2>\n<div class="mi-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { showNotify, closeNotify } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-comment">// 3 秒后自动关闭</span>\n<span class="hljs-title function_">showNotify</span>(<span class="hljs-string">&#x27;通知内容&#x27;</span>);\n\n<span class="hljs-comment">// 主动关闭</span>\n<span class="hljs-title function_">closeNotify</span>();\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="tong-zhi-lei-xing" tabindex="-1">通知类型</h3>\n<p>支持 <code>primary</code>、<code>success</code>、<code>warning</code>、<code>danger</code> 四种通知类型，默认为 <code>danger</code>。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { showNotify } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-comment">// 主要通知</span>\n<span class="hljs-title function_">showNotify</span>({ <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;primary&#x27;</span>, <span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;通知内容&#x27;</span> });\n\n<span class="hljs-comment">// 成功通知</span>\n<span class="hljs-title function_">showNotify</span>({ <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;success&#x27;</span>, <span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;通知内容&#x27;</span> });\n\n<span class="hljs-comment">// 危险通知</span>\n<span class="hljs-title function_">showNotify</span>({ <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;danger&#x27;</span>, <span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;通知内容&#x27;</span> });\n\n<span class="hljs-comment">// 警告通知</span>\n<span class="hljs-title function_">showNotify</span>({ <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;warning&#x27;</span>, <span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;通知内容&#x27;</span> });\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="zi-ding-yi-tong-zhi" tabindex="-1">自定义通知</h3>\n<p>自定义消息通知的颜色、位置和展示时长。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { showNotify } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-title function_">showNotify</span>({\n    <span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;自定义颜色&#x27;</span>,\n    <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#ad0000&#x27;</span>,\n    <span class="hljs-attr">background</span>: <span class="hljs-string">&#x27;#ffe1e1&#x27;</span>,\n});\n\n<span class="hljs-title function_">showNotify</span>({\n    <span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;自定义位置&#x27;</span>,\n    <span class="hljs-attr">position</span>: <span class="hljs-string">&#x27;bottom&#x27;</span>,\n});\n\n<span class="hljs-title function_">showNotify</span>({\n    <span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;自定义时长&#x27;</span>,\n    <span class="hljs-attr">duration</span>: <span class="hljs-number">1000</span>,\n});\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="shi-yong-notify-zu-jian" tabindex="-1">使用 Notify 组件</h3>\n<p>如果需要在 Notify 内嵌入组件或其他自定义内容，可以直接使用 Notify 组件，并使用默认插槽进行定制。使用前需要通过 <code>app.use</code> 等方式注册组件。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;组件调用&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showNotify&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-notify</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;bell&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-right: 4px;&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>通知内容<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-notify</span>&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n\n        <span class="hljs-keyword">const</span> <span class="hljs-title function_">showNotify</span> = (<span class="hljs-params"></span>) =&gt; {\n            show.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span>;\n            <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n                show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n            }, <span class="hljs-number">2000</span>);\n        };\n\n        <span class="hljs-keyword">return</span> {\n            show,\n            showNotify,\n        };\n    },\n};\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="mi-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3>\n<p>Miracle 中导出了以下 Notify 相关的辅助函数：</p>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>参数</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>showNotify</td>\n<td>在页面顶部展示 Notify</td>\n<td><code>NotifyOptions | string</code></td>\n<td>notify 实例</td>\n</tr>\n<tr>\n<td>closeNotify</td>\n<td>关闭当前展示的 Notify</td>\n<td>-</td>\n<td><code>void</code></td>\n</tr>\n<tr>\n<td>setNotifyDefaultOptions</td>\n<td>修改默认配置，影响所有的 <code>showNotify</code> 调用</td>\n<td><code>NotifyOptions</code></td>\n<td><code>void</code></td>\n</tr>\n<tr>\n<td>resetNotifyDefaultOptions</td>\n<td>重置默认配置，影响所有的 <code>showNotify</code> 调用</td>\n<td>-</td>\n<td><code>void</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="notifyoptions" tabindex="-1">NotifyOptions</h3>\n<p>调用 <code>showNotify</code> 等方法时，支持传入以下选项：</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>类型，可选值为 <code>primary</code> <code>success</code> <code>warning</code></td>\n<td><em>NotifyType</em></td>\n<td><code>danger</code></td>\n</tr>\n<tr>\n<td>message</td>\n<td>展示文案，支持通过<code>\\n</code>换行</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>duration</td>\n<td>展示时长(ms)，值为 0 时，notify 不会消失</td>\n<td><em>number | string</em></td>\n<td><code>3000</code></td>\n</tr>\n<tr>\n<td>zIndex</td>\n<td>将组件的 z-index 层级设置为一个固定值</td>\n<td><em>number | string</em></td>\n<td><code>2000+</code></td>\n</tr>\n<tr>\n<td>position</td>\n<td>弹出位置，可选值为 <code>bottom</code></td>\n<td><em>NotifyPosition</em></td>\n<td><code>top</code></td>\n</tr>\n<tr>\n<td>color</td>\n<td>字体颜色</td>\n<td><em>string</em></td>\n<td><code>white</code></td>\n</tr>\n<tr>\n<td>background</td>\n<td>背景颜色</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>className</td>\n<td>自定义类名</td>\n<td><em>string | Array | object</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>lockScroll</td>\n<td>是否锁定背景滚动</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>teleport</td>\n<td>指定挂载的节点，等同于 Teleport 组件的 <a href="https://cn.vuejs.org/api/built-in-components.html#teleport" target="_blank">to 属性</a></td>\n<td><em>string | Element</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>onClick</td>\n<td>点击时的回调函数</td>\n<td><em>(event: MouseEvent): void</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>onOpened</td>\n<td>完全展示后的回调函数</td>\n<td><em>() =&gt; void</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>onClose</td>\n<td>关闭时的回调函数</td>\n<td><em>() =&gt; void</em></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="props" tabindex="-1">Props</h3>\n<p>通过组件调用 <code>Notify</code> 时，支持以下 Props：</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>v-model:show</td>\n<td>是否显示通知</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>type</td>\n<td>类型，可选值为 <code>primary</code> <code>success</code> <code>warning</code></td>\n<td><em>NotifyType</em></td>\n<td><code>danger</code></td>\n</tr>\n<tr>\n<td>message</td>\n<td>展示文案，支持通过<code>\\n</code>换行</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>z-index</td>\n<td>将组件的 z-index 层级设置为一个固定值</td>\n<td><em>number | string</em></td>\n<td><code>2000+</code></td>\n</tr>\n<tr>\n<td>position</td>\n<td>弹出位置，可选值为 <code>bottom</code></td>\n<td><em>NotifyPosition</em></td>\n<td><code>top</code></td>\n</tr>\n<tr>\n<td>color</td>\n<td>字体颜色</td>\n<td><em>string</em></td>\n<td><code>white</code></td>\n</tr>\n<tr>\n<td>background</td>\n<td>背景颜色</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>class-name</td>\n<td>自定义类名</td>\n<td><em>string | Array | object</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>lock-scroll</td>\n<td>是否锁定背景滚动</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>teleport</td>\n<td>指定挂载的节点，等同于 Teleport 组件的 <a href="https://cn.vuejs.org/api/built-in-components.html#teleport" target="_blank">to 属性</a></td>\n<td><em>string | Element</em></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="events" tabindex="-1">Events</h3>\n<p>通过组件调用 <code>Notify</code> 时，支持以下事件：</p>\n<table>\n<thead>\n<tr>\n<th>事件名</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>click</td>\n<td>点击时的回调函数</td>\n<td><em>event: MouseEvent</em></td>\n</tr>\n<tr>\n<td>close</td>\n<td>关闭时的回调函数</td>\n<td>-</td>\n</tr>\n<tr>\n<td>opened</td>\n<td>完全展示后的回调函数</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="slots" tabindex="-1">Slots</h3>\n<p>通过组件调用 <code>Notify</code> 时，支持以下插槽：</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>default</td>\n<td>自定义内容</td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3>\n<p>组件导出以下类型定义：</p>\n<pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n    <span class="hljs-title class_">NotifyType</span>,\n    <span class="hljs-title class_">NotifyProps</span>,\n    <span class="hljs-title class_">NotifyOptions</span>,\n    <span class="hljs-title class_">NotifyPosition</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n</code></pre>\n</div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2>\n<div class="mi-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3>\n<p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider" target="_blank">ConfigProvider 组件</a>。</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>--mi-notify-text-color</td>\n<td><em>var(--mi-white)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-notify-padding</td>\n<td><em>var(--mi-padding-xs) var(--mi-padding-md)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-notify-font-size</td>\n<td><em>var(--mi-font-size-md)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-notify-line-height</td>\n<td><em>var(--mi-line-height-md)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-notify-primary-background</td>\n<td><em>var(--mi-primary-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-notify-success-background</td>\n<td><em>var(--mi-success-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-notify-danger-background</td>\n<td><em>var(--mi-danger-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-notify-warning-background</td>\n<td><em>var(--mi-warning-color)</em></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2>\n<div class="mi-doc-card"><h3 id="yin-yong-shownotify-shi-chu-xian-bian-yi-bao-cuo" tabindex="-1">引用 showNotify 时出现编译报错？</h3>\n<p>如果引用 <code>showNotify</code> 方法时出现以下报错，说明项目中使用了 <code>babel-plugin-import</code> 插件，导致代码被错误编译。</p>\n<pre><code class="language-bash">These dependencies were not found:\n\n* miracle/es/show-notify <span class="hljs-keyword">in</span> ./src/xxx.js\n* miracle/es/show-notify/style <span class="hljs-keyword">in</span> ./src/xxx.js\n</code></pre>\n</div>'},null,8,d))}}}]);