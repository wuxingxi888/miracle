"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["6351"],{5932:function(s,n,a){a.r(n),a.d(n,{default:function(){return d}});var t=a(1147);let l=["innerHTML"],d={setup:()=>({html:""}),render:()=>((0,t.wg)(),(0,t.iD)("div",{class:"mi-doc-markdown-body",innerHTML:'<h1>PasswordInput 密码输入框</h1>\n<div class="mi-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>带网格的输入框组件，可以用于输入密码、短信验证码等场景，通常与<a href="#/zh-CN/number-keyboard" target="_blank">数字键盘</a>组件配合使用。</p>\n</div><div class="mi-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3>\n<p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce" target="_blank">组件注册</a>。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">PasswordInput</span>, <span class="hljs-title class_">NumberKeyboard</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">PasswordInput</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">NumberKeyboard</span>);\n</code></pre>\n</div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2>\n<div class="mi-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3>\n<p>搭配数字键盘组件来实现密码输入功能。</p>\n<pre><code class="language-html"><span class="hljs-comment">&lt;!-- 密码输入框 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-password-input</span>\n    <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;value&quot;</span>\n    <span class="hljs-attr">:focused</span>=<span class="hljs-string">&quot;showKeyboard&quot;</span>\n    @<span class="hljs-attr">focus</span>=<span class="hljs-string">&quot;showKeyboard = true&quot;</span>\n/&gt;</span>\n<span class="hljs-comment">&lt;!-- 数字键盘 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-number-keyboard</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n    <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;showKeyboard&quot;</span>\n    @<span class="hljs-attr">blur</span>=<span class="hljs-string">&quot;showKeyboard = false&quot;</span>\n/&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#x27;123&#x27;</span>);\n        <span class="hljs-keyword">const</span> showKeyboard = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n\n        <span class="hljs-keyword">return</span> {\n            value,\n            showKeyboard,\n        };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="zi-ding-yi-chang-du" tabindex="-1">自定义长度</h3>\n<p>通过 <code>length</code> 属性来设置密码长度。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-password-input</span>\n    <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;value&quot;</span>\n    <span class="hljs-attr">:length</span>=<span class="hljs-string">&quot;4&quot;</span>\n    <span class="hljs-attr">:focused</span>=<span class="hljs-string">&quot;showKeyboard&quot;</span>\n    @<span class="hljs-attr">focus</span>=<span class="hljs-string">&quot;showKeyboard = true&quot;</span>\n/&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="ge-zi-jian-ju" tabindex="-1">格子间距</h3>\n<p>通过 <code>gutter</code> 属性来设置格子之间的间距。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-password-input</span>\n    <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;value&quot;</span>\n    <span class="hljs-attr">:gutter</span>=<span class="hljs-string">&quot;10&quot;</span>\n    <span class="hljs-attr">:focused</span>=<span class="hljs-string">&quot;showKeyboard&quot;</span>\n    @<span class="hljs-attr">focus</span>=<span class="hljs-string">&quot;showKeyboard = true&quot;</span>\n/&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="ming-wen-zhan-shi" tabindex="-1">明文展示</h3>\n<p>将 <code>mask</code> 设置为 <code>false</code> 可以明文展示输入的内容，适用于短信验证码等场景。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-password-input</span>\n    <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;value&quot;</span>\n    <span class="hljs-attr">:mask</span>=<span class="hljs-string">&quot;false&quot;</span>\n    <span class="hljs-attr">:focused</span>=<span class="hljs-string">&quot;showKeyboard&quot;</span>\n    @<span class="hljs-attr">focus</span>=<span class="hljs-string">&quot;showKeyboard = true&quot;</span>\n/&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="ti-shi-xin-xi" tabindex="-1">提示信息</h3>\n<p>通过 <code>info</code> 属性设置提示信息，通过 <code>error-info</code> 属性设置错误提示，例如当输入六位时提示密码错误。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-password-input</span>\n    <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;value&quot;</span>\n    <span class="hljs-attr">info</span>=<span class="hljs-string">&quot;密码为 6 位数字&quot;</span>\n    <span class="hljs-attr">:error-info</span>=<span class="hljs-string">&quot;errorInfo&quot;</span>\n    <span class="hljs-attr">:focused</span>=<span class="hljs-string">&quot;showKeyboard&quot;</span>\n    @<span class="hljs-attr">focus</span>=<span class="hljs-string">&quot;showKeyboard = true&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-number-keyboard</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n    <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;showKeyboard&quot;</span>\n    @<span class="hljs-attr">blur</span>=<span class="hljs-string">&quot;showKeyboard = false&quot;</span>\n/&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref, watch } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#x27;123&#x27;</span>);\n        <span class="hljs-keyword">const</span> errorInfo = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#x27;&#x27;</span>);\n        <span class="hljs-keyword">const</span> showKeyboard = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n\n        <span class="hljs-title function_">watch</span>(value, <span class="hljs-function">(<span class="hljs-params">newVal</span>) =&gt;</span> {\n            <span class="hljs-keyword">if</span> (newVal.<span class="hljs-property">length</span> === <span class="hljs-number">6</span> &amp;&amp; newVal !== <span class="hljs-string">&#x27;123456&#x27;</span>) {\n                errorInfo.<span class="hljs-property">value</span> = <span class="hljs-string">&#x27;密码错误&#x27;</span>;\n            } <span class="hljs-keyword">else</span> {\n                errorInfo.<span class="hljs-property">value</span> = <span class="hljs-string">&#x27;&#x27;</span>;\n            }\n        });\n\n        <span class="hljs-keyword">return</span> {\n            value,\n            errorInfo,\n            showKeyboard,\n        };\n    },\n};\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="mi-doc-card"><h3 id="props" tabindex="-1">Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td>密码值</td>\n<td><em>string</em></td>\n<td><code>\'\'</code></td>\n</tr>\n<tr>\n<td>info</td>\n<td>输入框下方文字提示</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>error-info</td>\n<td>输入框下方错误提示</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>length</td>\n<td>密码最大长度</td>\n<td><em>number | string</em></td>\n<td><code>6</code></td>\n</tr>\n<tr>\n<td>gutter</td>\n<td>输入框格子之间的间距，如 <code>20px</code> <code>2em</code>，默认单位为<code>px</code></td>\n<td><em>number | string</em></td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td>mask</td>\n<td>是否隐藏密码内容</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>focused</td>\n<td>是否已聚焦，聚焦时会显示光标</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="events" tabindex="-1">Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>focus</td>\n<td>输入框聚焦时触发</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3>\n<p>组件导出以下类型定义：</p>\n<pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">PasswordInputProps</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n</code></pre>\n</div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2>\n<div class="mi-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3>\n<p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider" target="_blank">ConfigProvider 组件</a>。</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>--mi-password-input-height</td>\n<td><em>50px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-password-input-margin</td>\n<td><em>0 var(--mi-padding-md)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-password-input-font-size</td>\n<td><em>20px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-password-input-radius</td>\n<td><em>6px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-password-input-background</td>\n<td><em>var(--mi-background-2)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-password-input-info-color</td>\n<td><em>var(--mi-text-color-2)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-password-input-info-font-size</td>\n<td><em>var(--mi-font-size-md)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-password-input-error-info-color</td>\n<td><em>var(--mi-danger-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-password-input-dot-size</td>\n<td><em>10px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-password-input-dot-color</td>\n<td><em>var(--mi-text-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-password-input-text-color</td>\n<td><em>var(--mi-text-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-password-input-cursor-color</td>\n<td><em>var(--mi-text-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-password-input-cursor-width</td>\n<td><em>1px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-password-input-cursor-height</td>\n<td><em>40%</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-password-input-cursor-duration</td>\n<td><em>1s</em></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div>'},null,8,l))}}}]);