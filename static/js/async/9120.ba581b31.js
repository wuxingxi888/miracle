"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["9120"],{8852:function(s,n,a){a.r(n),a.d(n,{default:function(){return e}});var t=a(1147);let l=["innerHTML"],e={setup:()=>({html:""}),render:()=>((0,t.wg)(),(0,t.iD)("div",{class:"mi-doc-markdown-body",innerHTML:'<h1>useState</h1>\n<div class="mi-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>一个包含当前状态和更新状态函数的元组。</p>\n</div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2>\n<div class="mi-doc-card"><h3 id="chu-shi-zhuang-tai-wei-han-shu" tabindex="-1">初始状态为函数</h3>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { useState } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/use&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> <span class="hljs-title function_">initialStateFunc</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-number">10</span>;\n\n        <span class="hljs-keyword">const</span> [count, setCount] = <span class="hljs-title function_">useState</span>(initialStateFunc);\n\n        <span class="hljs-title function_">setCount</span>(count + <span class="hljs-number">1</span>);\n        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(count.<span class="hljs-property">value</span>); <span class="hljs-comment">// -&gt; 11</span>\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="chu-shi-zhuang-tai-wei-pu-tong-zhi" tabindex="-1">初始状态为普通值</h3>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { useState } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/use&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> initialStateValue = <span class="hljs-number">20</span>;\n\n        <span class="hljs-keyword">const</span> [count, setCount] = <span class="hljs-title function_">useState</span>(initialStateValue);\n\n        <span class="hljs-title function_">setCount</span>(count + <span class="hljs-number">1</span>);\n        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(count.<span class="hljs-property">value</span>); <span class="hljs-comment">// -&gt; 21</span>\n    },\n};\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="mi-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3>\n<pre><code class="language-ts"><span class="hljs-keyword">function</span> <span class="hljs-title function_">useState</span>(<span class="hljs-params">\n    initialState?: (() =&gt; S) | S,\n</span>): [<span class="hljs-title class_">Ref</span>&lt;S&gt;, <span class="hljs-title class_">Dispatch</span>&lt;<span class="hljs-title class_">BasicStateAction</span>&lt;S&gt;&gt;];\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="can-shu" tabindex="-1">参数</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>initialState</td>\n<td>初始状态</td>\n<td><em>(() =&gt; S) | S</em></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="fan-hui-zhi" tabindex="-1">返回值</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>reactiveState</td>\n<td>状态值</td>\n<td><em>Ref<S></em></td>\n</tr>\n<tr>\n<td>dispatchAction</td>\n<td>更新状态</td>\n<td><em>Dispatch&lt;BasicStateAction<S>&gt;</em></td>\n</tr>\n</tbody>\n</table>\n</div>'},null,8,l))}}}]);