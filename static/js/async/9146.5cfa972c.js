"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["9146"],{3530:function(s,a,n){n.r(a),n.d(a,{default:function(){return p}});var t=n(1147);let l=["innerHTML"],p={setup:()=>({html:""}),render:()=>((0,t.wg)(),(0,t.iD)("div",{class:"mi-doc-markdown-body",innerHTML:'<h1>Barrage 弹幕</h1>\n<div class="mi-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>实现观看视频时弹出的评论性字幕功能。</p>\n</div><div class="mi-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3>\n<p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce" target="_blank">组件注册</a>。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Barrage</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Barrage</span>);\n</code></pre>\n</div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2>\n<div class="mi-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3>\n<p>可以通过 <code>v-model</code> 双向绑定弹幕数据，<code>Barrage</code> 会在组件区域内播放文字弹幕，使用数组数据 <code>push()</code> 可以发送弹幕文字。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-barrage</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;list&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;video&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; height: 150px&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-barrage</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-space</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-top: 10px&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;add&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span>&gt;</span>弹幕<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-space</span>&gt;</span>\n</code></pre>\n<pre><code class="language-ts"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> defaultList = [\n            { <span class="hljs-attr">id</span>: <span class="hljs-number">100</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;轻量&#x27;</span> },\n            { <span class="hljs-attr">id</span>: <span class="hljs-number">101</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;可定制的&#x27;</span> },\n            { <span class="hljs-attr">id</span>: <span class="hljs-number">102</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;移动端&#x27;</span> },\n            { <span class="hljs-attr">id</span>: <span class="hljs-number">103</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Vue&#x27;</span> },\n            { <span class="hljs-attr">id</span>: <span class="hljs-number">104</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;组件库&#x27;</span> },\n            { <span class="hljs-attr">id</span>: <span class="hljs-number">105</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;MiracleUI&#x27;</span> },\n            { <span class="hljs-attr">id</span>: <span class="hljs-number">106</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;666&#x27;</span> },\n        ];\n\n        <span class="hljs-keyword">const</span> list = <span class="hljs-title function_">ref</span>([...defaultList]);\n        <span class="hljs-keyword">const</span> <span class="hljs-title function_">add</span> = (<span class="hljs-params"></span>) =&gt; {\n            list.<span class="hljs-property">value</span>.<span class="hljs-title function_">push</span>({ <span class="hljs-attr">id</span>: <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>(), <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Barrage&#x27;</span> });\n        };\n\n        <span class="hljs-keyword">return</span> { list, add };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="mo-ni-shi-pin-dan-mu" tabindex="-1">模拟视频弹幕</h3>\n<p>设置 <code>auto-play</code> 为 <code>false</code> 属性后，需要使用 <code>play()</code> 进行弹幕播放，暂停可以使用 <code>pause()</code> 实现。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-barrage</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;list&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;barrage&quot;</span> <span class="hljs-attr">:auto-play</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;video&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; height: 150px&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-barrage</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-space</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-top: 10px&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;add&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span> <span class="hljs-attr">:disabled</span>=<span class="hljs-string">&quot;!isPlay&quot;</span>\n        &gt;</span>弹幕&lt;/mi-button\n    &gt;\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;toggle()&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span>\n        &gt;</span>{{ isPlay ? &#x27;暂停&#x27; : &#x27;开始&#x27; }}&lt;/mi-button\n    &gt;\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-space</span>&gt;</span>\n</code></pre>\n<pre><code class="language-ts"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> defaultList = [\n            { <span class="hljs-attr">id</span>: <span class="hljs-number">100</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;轻量&#x27;</span> },\n            { <span class="hljs-attr">id</span>: <span class="hljs-number">101</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;可定制的&#x27;</span> },\n            { <span class="hljs-attr">id</span>: <span class="hljs-number">102</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;移动端&#x27;</span> },\n            { <span class="hljs-attr">id</span>: <span class="hljs-number">103</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Vue&#x27;</span> },\n            { <span class="hljs-attr">id</span>: <span class="hljs-number">104</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;组件库&#x27;</span> },\n            { <span class="hljs-attr">id</span>: <span class="hljs-number">105</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;MiracleUI&#x27;</span> },\n            { <span class="hljs-attr">id</span>: <span class="hljs-number">106</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;666&#x27;</span> },\n        ];\n\n        <span class="hljs-keyword">const</span> list = <span class="hljs-title function_">ref</span>([...defaultList]);\n        <span class="hljs-keyword">const</span> barrage = ref&lt;<span class="hljs-title class_">BarrageInstance</span>&gt;();\n        <span class="hljs-keyword">const</span> <span class="hljs-title function_">add</span> = (<span class="hljs-params"></span>) =&gt; {\n            list.<span class="hljs-property">value</span>.<span class="hljs-title function_">push</span>({ <span class="hljs-attr">id</span>: <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>(), <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Barrage&#x27;</span> });\n        };\n\n        <span class="hljs-keyword">const</span> [isPlay, toggle] = <span class="hljs-title function_">useToggle</span>(<span class="hljs-literal">false</span>);\n\n        <span class="hljs-title function_">watch</span>(isPlay, <span class="hljs-function">() =&gt;</span> {\n            <span class="hljs-keyword">if</span> (isPlay.<span class="hljs-property">value</span>) barrage.<span class="hljs-property">value</span>?.<span class="hljs-title function_">play</span>();\n            <span class="hljs-keyword">else</span> barrage.<span class="hljs-property">value</span>?.<span class="hljs-title function_">pause</span>();\n        });\n\n        <span class="hljs-keyword">return</span> { list, barrage, isPlay, toggle, add };\n    },\n};\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="mi-doc-card"><h3 id="props" tabindex="-1">Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>v-model</td>\n<td>弹幕数据</td>\n<td><em>BarrageItem[]</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>auto-play</td>\n<td>是否自动播放弹幕</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>rows</td>\n<td>弹幕文字行数</td>\n<td><em>number | string</em></td>\n<td><code>4</code></td>\n</tr>\n<tr>\n<td>top</td>\n<td>弹幕文字区域顶部间距，单位 <code>px</code></td>\n<td><em>number | string</em></td>\n<td><code>10</code></td>\n</tr>\n<tr>\n<td>duration</td>\n<td>弹幕文字滑过容器的时间，单位 <code>ms</code></td>\n<td><em>number | string</em></td>\n<td><code>4000</code></td>\n</tr>\n<tr>\n<td>delay</td>\n<td>弹幕动画延时，单位 <code>ms</code></td>\n<td><em>number</em></td>\n<td><code>300</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3>\n<p>通过 ref 可以获取到 Barrage 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa" target="_blank">组件实例方法</a>。</p>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>参数</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>play</td>\n<td>播放弹幕</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>pause</td>\n<td>暂停弹幕</td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="slots" tabindex="-1">Slots</h3>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>default</td>\n<td>弹幕组件子元素</td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3>\n<p>组件导出以下类型定义：</p>\n<pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n    <span class="hljs-title class_">BarrageProps</span>,\n    <span class="hljs-title class_">BarrageItem</span>,\n    <span class="hljs-title class_">BarrageInstance</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n</code></pre>\n</div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2>\n<div class="mi-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3>\n<p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider" target="_blank">ConfigProvider 组件</a>。</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>--mi-barrage-font-size</td>\n<td><em>16px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-barrage-space</td>\n<td><em>10px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-barrage-color</td>\n<td><em>var(--mi-white)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-barrage-font</td>\n<td><em>inherit</em></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div>'},null,8,l))}}}]);