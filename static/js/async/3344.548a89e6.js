"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["3344"],{6542:function(s,a,n){n.r(a),n.d(a,{default:function(){return p}});var l=n(1147);let t=["innerHTML"],p={setup:()=>({html:""}),render:()=>((0,l.wg)(),(0,l.iD)("div",{class:"mi-doc-markdown-body",innerHTML:'<h1>常见问题</h1>\n<div class="mi-doc-card"><h3 id="ru-he-zi-ding-yi-miracle-zu-jian-de-yang-shi" tabindex="-1">如何自定义 Miracle 组件的样式？</h3>\n<h4 id="1.-zhu-ti-ding-zhi" tabindex="-1">1. 主题定制</h4>\n<p>Miracle 基于 CSS 变量提供了主题定制的能力，可以对组件样式进行统一修改，详见 <a href="#/zh-CN/config-provider" target="_blank">ConfigProvider 全局配置</a> 组件。</p>\n<h4 id="2.-fu-gai-mo-ren-yang-shi" tabindex="-1">2. 覆盖默认样式</h4>\n<p>如果主题定制不能满足你的需求，也可以通过<strong>自定义样式类</strong>来覆盖默认样式，参考下面的示例：</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-button&quot;</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n    <span class="hljs-comment">/** 覆盖 Button 最外层元素的样式 */</span>\n    <span class="hljs-selector-class">.my-button</span> {\n        <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;\n    }\n\n    <span class="hljs-comment">/** 覆盖 Button 内部子元素的样式 */</span>\n    <span class="hljs-selector-class">.my-button</span> <span class="hljs-selector-class">.mi-button__text</span> {\n        <span class="hljs-attribute">color</span>: red;\n    }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="zai-html-zhong-wu-fa-zheng-que-xuan-ran-zu-jian" tabindex="-1">在 HTML 中无法正确渲染组件？</h3>\n<p>在 HTML 中使用 Miracle 组件时，你可能会碰到部分示例代码无法正确渲染的情况，比如下面的用法：</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-cell-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-cell-group</span>&gt;</span>\n</code></pre>\n<p>这是因为 HTML 并不支持自闭合的自定义元素，也就是说 <code>&lt;mi-cell /&gt;</code> 这样的语法是不被识别的，使用完整的闭合标签可以避免这个问题：</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-cell-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mi-cell</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mi-cell</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-cell-group</span>&gt;</span>\n</code></pre>\n<p>在单文件组件、字符串模板和 JSX 中可以使用自闭合的自定义元素，因此不会出现这个问题。</p>\n</div><div class="mi-doc-card"><h3 id="zai-ios-shang-wu-fa-chu-fa-zu-jian-de-dian-ji-fan-kui-xiao-guo" tabindex="-1">在 iOS 上无法触发组件的点击反馈效果？</h3>\n<p>这是因为 iOS Safari 默认不会触发 <code>:active</code> 伪类，解决方法是在 <code>body</code> 标签上添加一个空的 <code>ontouchstart</code> 属性：</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">ontouchstart</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>\n    ...\n<span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>\n</code></pre>\n<p>参考链接：<a href="https://stackoverflow.com/questions/3885018/active-pseudo-class-doesnt-work-in-mobile-safari/33681490#33681490" target="_blank">stackoverflow - :active pseudo-class doesn\'t work in mobile safari</a></p>\n</div><div class="mi-doc-card"><h3 id="wei-shi-me-mei-you-select-zu-jian" tabindex="-1">为什么没有 Select 组件？</h3>\n<p>Select 是桌面端常用的组件，但它的交互形式不适合移动端。</p>\n<p>在移动端，我们推荐使用 <a href="#/zh-CN/picker" target="_blank">Picker 选择器组件</a> 作为代替。</p>\n</div><div class="mi-doc-card"><h3 id="shi-fou-zhi-chi-zai-uni-app-zhong-shi-yong" tabindex="-1">是否支持在 uni-app 中使用？</h3>\n<p>Miracle 所有组件都是基于 Vue 框架实现的，没有针对 uni-app 进行适配，因此不保证各个组件在 uni-app 下的可用性。</p>\n<p>如果你在 uni-app 中使用 Miracle 遇到问题，建议向 uni-app 进行反馈。</p>\n</div><div class="mi-doc-card"><h3 id="bu-fen-zu-jian-wu-fa-zai-zhuo-mian-duan-jin-xing-cao-zuo" tabindex="-1">部分组件无法在桌面端进行操作？</h3>\n<p>参见<a href="#/zh-CN/advanced-usage#zhuo-mian-duan-gua-pei" target="_blank">桌面端适配</a>。</p>\n</div><div class="mi-doc-card"><h3 id="ru-he-jin-xing-yi-dong-duan-xiang-ying-shi-gua-pei" tabindex="-1">如何进行移动端响应式适配？</h3>\n<p>参见<a href="#/zh-CN/advanced-usage#liu-lan-qi-gua-pei" target="_blank">浏览器适配</a>。</p>\n</div>'},null,8,t))}}}]);