"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["2196"],{8158:function(s,t,n){n.r(t),n.d(t,{default:function(){return d}});var a=n(1147);let l=["innerHTML"],d={setup:()=>({html:""}),render:()=>((0,a.wg)(),(0,a.iD)("div",{class:"mi-doc-markdown-body",innerHTML:'<h1>Button 按钮</h1>\n<div class="mi-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>按钮用于触发一个操作，如提交表单。</p>\n</div><div class="mi-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3>\n<p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce" target="_blank">组件注册</a>。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Button</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Button</span>);\n</code></pre>\n</div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2>\n<div class="mi-doc-card"><h3 id="an-niu-lei-xing" tabindex="-1">按钮类型</h3>\n<p>按钮支持 <code>default</code>、<code>primary</code>、<code>success</code>、<code>warning</code>、<code>danger</code> 五种类型，默认为 <code>default</code>。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>主要按钮<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>成功按钮<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;default&quot;</span>&gt;</span>默认按钮<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span>&gt;</span>危险按钮<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span>&gt;</span>警告按钮<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="po-su-an-niu" tabindex="-1">朴素按钮</h3>\n<p>通过 <code>plain</code> 属性将按钮设置为朴素按钮，朴素按钮的文字为按钮颜色，背景为白色。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>朴素按钮<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>朴素按钮<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="xi-bian-kuang" tabindex="-1">细边框</h3>\n<p>设置 <code>hairline</code> 属性可以展示 0.5px 的细边框。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">hairline</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>细边框按钮<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">hairline</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>细边框按钮<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="jin-yong-zhuang-tai" tabindex="-1">禁用状态</h3>\n<p>通过 <code>disabled</code> 属性来禁用按钮，禁用状态下按钮不可点击。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">disabled</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>禁用状态<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">disabled</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>禁用状态<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="jia-zai-zhuang-tai" tabindex="-1">加载状态</h3>\n<p>通过 <code>loading</code> 属性设置按钮为加载状态，加载状态下默认会隐藏按钮文字，可以通过 <code>loading-text</code> 设置加载状态下的文字。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">loading-type</span>=<span class="hljs-string">&quot;spinner&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;success&quot;</span> <span class="hljs-attr">loading-text</span>=<span class="hljs-string">&quot;加载中...&quot;</span> /&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="an-niu-xing-zhuang" tabindex="-1">按钮形状</h3>\n<p>通过 <code>square</code> 设置方形按钮，通过 <code>round</code> 设置圆形按钮。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">square</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>方形按钮<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">round</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>圆形按钮<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="tu-biao-an-niu" tabindex="-1">图标按钮</h3>\n<p>通过 <code>icon</code> 属性设置按钮图标，支持 Icon 组件里的所有图标，也可以传入图标 URL。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;plus&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;plus&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span>\n    <span class="hljs-attr">plain</span>\n    <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/wuxingxi888/CDN_IMG_BED/logo.png&quot;</span>\n    <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>\n    &gt;</span>按钮&lt;/mi-button\n&gt;\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="an-niu-chi-cun" tabindex="-1">按钮尺寸</h3>\n<p>支持 <code>large</code>、<code>normal</code>、<code>small</code>、<code>mini</code> 四种尺寸，默认为 <code>normal</code>。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;large&quot;</span>&gt;</span>大号按钮<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;normal&quot;</span>&gt;</span>普通按钮<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span>&gt;</span>小型按钮<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;mini&quot;</span>&gt;</span>迷你按钮<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="kuai-ji-yuan-su" tabindex="-1">块级元素</h3>\n<p>按钮在默认情况下为行内块级元素，通过 <code>block</code> 属性可以将按钮的元素类型设置为块级元素。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">block</span>&gt;</span>块级元素<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="ye-mian-dao-hang" tabindex="-1">页面导航</h3>\n<p>可以通过 <code>url</code> 属性进行 URL 跳转，或通过 <code>to</code> 属性进行路由跳转。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">url</span>=<span class="hljs-string">&quot;https://github.com&quot;</span>&gt;</span>URL 跳转<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span>路由跳转<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="zi-ding-yi-yan-se" tabindex="-1">自定义颜色</h3>\n<p>通过 <code>color</code> 属性可以自定义按钮的颜色。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#7232dd&quot;</span>&gt;</span>单色按钮<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#7232dd&quot;</span> <span class="hljs-attr">plain</span>&gt;</span>单色按钮<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;linear-gradient(to right, #ff6034, #ee0a24)&quot;</span>\n    &gt;</span>渐变色按钮&lt;/mi-button\n&gt;\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="dong-hua-an-niu" tabindex="-1">动画按钮</h3>\n<p>搭配 Button 和 <a href="/#/zh-CN/swipe" target="_blank">Swipe 组件</a>，可以实现垂直滚动的动画按钮效果。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">round</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-swipe</span>\n        <span class="hljs-attr">vertical</span>\n        <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;notice-swipe&quot;</span>\n        <span class="hljs-attr">:autoplay</span>=<span class="hljs-string">&quot;2000&quot;</span>\n        <span class="hljs-attr">:touchable</span>=<span class="hljs-string">&quot;false&quot;</span>\n        <span class="hljs-attr">:show-indicators</span>=<span class="hljs-string">&quot;false&quot;</span>\n    &gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">mi-swipe-item</span>&gt;</span>做任务<span class="hljs-tag">&lt;/<span class="hljs-name">mi-swipe-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">mi-swipe-item</span>&gt;</span>抽大奖<span class="hljs-tag">&lt;/<span class="hljs-name">mi-swipe-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">mi-swipe</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n    <span class="hljs-selector-class">.notice-swipe</span> {\n        <span class="hljs-attribute">height</span>: <span class="hljs-number">40px</span>;\n        <span class="hljs-attribute">line-height</span>: <span class="hljs-number">40px</span>;\n    }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="mi-doc-card"><h3 id="props" tabindex="-1">Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>类型，可选值为 <code>primary</code> <code>success</code> <code>warning</code> <code>danger</code></td>\n<td><em>string</em></td>\n<td><code>default</code></td>\n</tr>\n<tr>\n<td>size</td>\n<td>尺寸，可选值为 <code>large</code> <code>small</code> <code>mini</code></td>\n<td><em>string</em></td>\n<td><code>normal</code></td>\n</tr>\n<tr>\n<td>text</td>\n<td>按钮文字</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>color</td>\n<td>按钮颜色，支持传入 <code>linear-gradient</code> 渐变色</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>左侧图标名称或图片链接，等同于 Icon 组件的 <a href="#/zh-CN/icon#props" target="_blank">name 属性</a></td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>icon-prefix</td>\n<td>图标类名前缀，等同于 Icon 组件的 <a href="#/zh-CN/icon#props" target="_blank">class-prefix 属性</a></td>\n<td><em>string</em></td>\n<td><code>mi-icon</code></td>\n</tr>\n<tr>\n<td>icon-position</td>\n<td>图标展示位置，可选值为 <code>right</code></td>\n<td><em>string</em></td>\n<td><code>left</code></td>\n</tr>\n<tr>\n<td>tag</td>\n<td>按钮根节点的 HTML 标签</td>\n<td><em>string</em></td>\n<td><code>button</code></td>\n</tr>\n<tr>\n<td>native-type</td>\n<td>原生 button 标签的 type 属性</td>\n<td><em>string</em></td>\n<td><code>button</code></td>\n</tr>\n<tr>\n<td>block</td>\n<td>是否为块级元素</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>plain</td>\n<td>是否为朴素按钮</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>square</td>\n<td>是否为方形按钮</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>round</td>\n<td>是否为圆形按钮</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>是否禁用按钮</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>hairline</td>\n<td>是否使用 0.5px 边框</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>loading</td>\n<td>是否显示为加载状态</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>loading-text</td>\n<td>加载状态提示文字</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>loading-type</td>\n<td><a href="#/zh-CN/loading" target="_blank">加载图标类型</a>，可选值为 <code>spinner</code></td>\n<td><em>string</em></td>\n<td><code>circular</code></td>\n</tr>\n<tr>\n<td>loading-size</td>\n<td>加载图标大小，默认单位为 <code>px</code></td>\n<td><em>number | string</em></td>\n<td><code>20px</code></td>\n</tr>\n<tr>\n<td>url</td>\n<td>点击后跳转的链接地址</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>to</td>\n<td>点击后跳转的目标路由对象，等同于 Vue Router 的 <a href="https://router.vuejs.org/zh/api/interfaces/RouterLinkProps.html#Properties-to" target="_blank">to 属性</a></td>\n<td><em>string | object</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>replace</td>\n<td>是否在跳转时替换当前页面历史</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="events" tabindex="-1">Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>click</td>\n<td>点击按钮，且按钮状态不为加载或禁用时触发</td>\n<td><em>event: MouseEvent</em></td>\n</tr>\n<tr>\n<td>touchstart</td>\n<td>开始触摸按钮时触发</td>\n<td><em>event: TouchEvent</em></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="slots" tabindex="-1">Slots</h3>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>default</td>\n<td>按钮内容</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>自定义图标</td>\n</tr>\n<tr>\n<td>loading</td>\n<td>自定义加载图标</td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3>\n<p>组件导出以下类型定义：</p>\n<pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n    <span class="hljs-title class_">ButtonType</span>,\n    <span class="hljs-title class_">ButtonSize</span>,\n    <span class="hljs-title class_">ButtonProps</span>,\n    <span class="hljs-title class_">ButtonNativeType</span>,\n    <span class="hljs-title class_">ButtonIconPosition</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n</code></pre>\n</div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2>\n<div class="mi-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3>\n<p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider" target="_blank">ConfigProvider 组件</a>。</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>--mi-button-mini-height</td>\n<td><em>24px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-mini-padding</td>\n<td><em>0 var(--mi-padding-base)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-mini-font-size</td>\n<td><em>var(--mi-font-size-xs)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-small-height</td>\n<td><em>32px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-small-padding</td>\n<td><em>0 var(--mi-padding-xs)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-small-font-size</td>\n<td><em>var(--mi-font-size-sm)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-normal-font-size</td>\n<td><em>var(--mi-font-size-md)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-normal-padding</td>\n<td><em>0 15px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-large-height</td>\n<td><em>50px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-default-height</td>\n<td><em>44px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-default-line-height</td>\n<td><em>1.2</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-default-font-size</td>\n<td><em>var(--mi-font-size-lg)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-default-color</td>\n<td><em>var(--mi-text-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-default-background</td>\n<td><em>var(--mi-background-2)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-default-border-color</td>\n<td><em>var(--mi-gray-4)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-primary-color</td>\n<td><em>var(--mi-white)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-primary-background</td>\n<td><em>var(--mi-primary-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-primary-border-color</td>\n<td><em>var(--mi-primary-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-success-color</td>\n<td><em>var(--mi-white)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-success-background</td>\n<td><em>var(--mi-success-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-success-border-color</td>\n<td><em>var(--mi-success-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-danger-color</td>\n<td><em>var(--mi-white)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-danger-background</td>\n<td><em>var(--mi-danger-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-danger-border-color</td>\n<td><em>var(--mi-danger-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-warning-color</td>\n<td><em>var(--mi-white)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-warning-background</td>\n<td><em>var(--mi-orange)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-warning-border-color</td>\n<td><em>var(--mi-orange)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-border-width</td>\n<td><em>var(--mi-border-width)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-radius</td>\n<td><em>var(--mi-radius-md)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-round-radius</td>\n<td><em>var(--mi-radius-max)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-plain-background</td>\n<td><em>var(--mi-white)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-disabled-opacity</td>\n<td><em>var(--mi-disabled-opacity)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-icon-size</td>\n<td><em>1.2em</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-button-loading-icon-size</td>\n<td><em>20px</em></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div>'},null,8,l))}}}]);