"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["7481"],{5236:function(s,n,a){a.r(n),a.d(n,{default:function(){return p}});var t=a(1147);let l=["innerHTML"],p={setup:()=>({html:""}),render:()=>((0,t.wg)(),(0,t.iD)("div",{class:"mi-doc-markdown-body",innerHTML:'<h1>Cascader 级联选择</h1>\n<div class="mi-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>级联选择框，用于多层级数据的选择，典型场景为省市区选择。</p>\n</div><div class="mi-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3>\n<p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce" target="_blank">组件注册</a>。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Cascader</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Cascader</span>);\n</code></pre>\n</div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2>\n<div class="mi-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3>\n<p>级联选择组件可以搭配 Field 和 Popup 组件使用，示例如下：</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-field</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;fieldValue&quot;</span>\n    <span class="hljs-attr">is-link</span>\n    <span class="hljs-attr">readonly</span>\n    <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;地区&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请选择所在地区&quot;</span>\n    @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-popup</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">round</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-cascader</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;cascaderValue&quot;</span>\n        <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;请选择所在地区&quot;</span>\n        <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n        @<span class="hljs-attr">close</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n        @<span class="hljs-attr">finish</span>=<span class="hljs-string">&quot;onFinish&quot;</span>\n    /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-popup</span>&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n        <span class="hljs-keyword">const</span> fieldValue = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#x27;&#x27;</span>);\n        <span class="hljs-keyword">const</span> cascaderValue = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#x27;&#x27;</span>);\n        <span class="hljs-comment">// 选项列表，children 代表子选项，支持多级嵌套</span>\n        <span class="hljs-keyword">const</span> options = [\n            {\n                <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;浙江省&#x27;</span>,\n                <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;330000&#x27;</span>,\n                <span class="hljs-attr">children</span>: [{ <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;杭州市&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;330100&#x27;</span> }],\n            },\n            {\n                <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;江苏省&#x27;</span>,\n                <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;320000&#x27;</span>,\n                <span class="hljs-attr">children</span>: [{ <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;南京市&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;320100&#x27;</span> }],\n            },\n        ];\n        <span class="hljs-comment">// 全部选项选择完毕后，会触发 finish 事件</span>\n        <span class="hljs-keyword">const</span> <span class="hljs-title function_">onFinish</span> = (<span class="hljs-params">{ selectedOptions }</span>) =&gt; {\n            show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n            fieldValue.<span class="hljs-property">value</span> = selectedOptions\n                .<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">option</span>) =&gt;</span> option.<span class="hljs-property">text</span>)\n                .<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;/&#x27;</span>);\n        };\n\n        <span class="hljs-keyword">return</span> {\n            show,\n            options,\n            onFinish,\n            fieldValue,\n            cascaderValue,\n        };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="zhong-guo-sheng-shi-qu-shu-ju" tabindex="-1">中国省市区数据</h3>\n<p>Cascader 组件常用于选择省市区，Miracle 提供了一份中国省市区数据，你可以安装 <a href="https://github.com/wuxingxi888/miracle/tree/main/packages/miracle-area-data" target="_blank">@miracle-web/area-data</a> npm 包来引入：</p>\n<pre><code class="language-bash"><span class="hljs-comment"># 通过 npm</span>\nnpm i @miracle-web/area-data\n\n<span class="hljs-comment"># 通过 yarn</span>\nyarn add @miracle-web/area-data\n\n<span class="hljs-comment"># 通过 pnpm</span>\npnpm add @miracle-web/area-data\n\n<span class="hljs-comment"># 通过 Bun</span>\nbun add @miracle-web/area-data\n</code></pre>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-field</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;fieldValue&quot;</span>\n    <span class="hljs-attr">is-link</span>\n    <span class="hljs-attr">readonly</span>\n    <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;地区&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请选择所在地区&quot;</span>\n    @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-popup</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">round</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-cascader</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;cascaderValue&quot;</span>\n        <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;请选择所在地区&quot;</span>\n        <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n        @<span class="hljs-attr">close</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n        @<span class="hljs-attr">finish</span>=<span class="hljs-string">&quot;onFinish&quot;</span>\n    /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-popup</span>&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { useCascaderAreaData } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/area-data&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n        <span class="hljs-keyword">const</span> fieldValue = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#x27;&#x27;</span>);\n        <span class="hljs-keyword">const</span> cascaderValue = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#x27;&#x27;</span>);\n        <span class="hljs-keyword">const</span> options = <span class="hljs-title function_">useCascaderAreaData</span>();\n        <span class="hljs-keyword">const</span> <span class="hljs-title function_">onFinish</span> = (<span class="hljs-params">{ selectedOptions }</span>) =&gt; {\n            show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n            fieldValue.<span class="hljs-property">value</span> = selectedOptions\n                .<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">option</span>) =&gt;</span> option.<span class="hljs-property">text</span>)\n                .<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;/&#x27;</span>);\n        };\n        <span class="hljs-keyword">return</span> {\n            show,\n            options,\n            onFinish,\n            fieldValue,\n            cascaderValue,\n        };\n    },\n};\n</code></pre>\n<blockquote>\n<p>Tips: 中国的行政区划每年都会有变动，如果发现省市区数据未及时更新，欢迎提 Pull Request 帮助我们更新。你可以在<a href="http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/" target="_blank">「国家统计局 - 全国区划代码」</a> 和<a href="https://www.mca.gov.cn/article/sj/xzqh/1980/" target="_blank">「民政部 - 行政区划代码」</a>上查询到最新数据，请根据官方数据进行核实。</p>\n</blockquote>\n</div><div class="mi-doc-card"><h3 id="zi-ding-yi-yan-se" tabindex="-1">自定义颜色</h3>\n<p>通过 <code>active-color</code> 属性来设置选中状态的高亮颜色。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-cascader</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;cascaderValue&quot;</span>\n    <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;请选择所在地区&quot;</span>\n    <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n    <span class="hljs-attr">active-color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span>\n    @<span class="hljs-attr">close</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n    @<span class="hljs-attr">finish</span>=<span class="hljs-string">&quot;onFinish&quot;</span>\n/&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="yi-bu-jia-zai-xuan-xiang" tabindex="-1">异步加载选项</h3>\n<p>可以监听 <code>change</code> 事件并动态设置 <code>options</code>，实现异步加载选项。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-field</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;fieldValue&quot;</span>\n    <span class="hljs-attr">is-link</span>\n    <span class="hljs-attr">readonly</span>\n    <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;地区&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请选择所在地区&quot;</span>\n    @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-popup</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">round</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-cascader</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;cascaderValue&quot;</span>\n        <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;请选择所在地区&quot;</span>\n        <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n        @<span class="hljs-attr">close</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n        @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span>\n        @<span class="hljs-attr">finish</span>=<span class="hljs-string">&quot;onFinish&quot;</span>\n    /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-popup</span>&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { closeToast, showLoadingToast } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n        <span class="hljs-keyword">const</span> fieldValue = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#x27;&#x27;</span>);\n        <span class="hljs-keyword">const</span> cascaderValue = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#x27;&#x27;</span>);\n        <span class="hljs-keyword">const</span> options = <span class="hljs-title function_">ref</span>([\n            {\n                <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;浙江省&#x27;</span>,\n                <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;330000&#x27;</span>,\n                <span class="hljs-attr">children</span>: [],\n            },\n        ]);\n        <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">{ value }</span>) =&gt; {\n            <span class="hljs-keyword">if</span> (\n                value === options.<span class="hljs-property">value</span>[<span class="hljs-number">0</span>].<span class="hljs-property">value</span> &amp;&amp;\n                options.<span class="hljs-property">value</span>[<span class="hljs-number">0</span>].<span class="hljs-property">children</span>.<span class="hljs-property">length</span> === <span class="hljs-number">0</span>\n            ) {\n                <span class="hljs-comment">// 模拟数据请求</span>\n                <span class="hljs-title function_">showLoadingToast</span>(<span class="hljs-string">&#x27;加载中...&#x27;</span>);\n                <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n                    options.<span class="hljs-property">value</span>[<span class="hljs-number">0</span>].<span class="hljs-property">children</span> = [\n                        { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;杭州市&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;330100&#x27;</span> },\n                        { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;宁波市&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;330200&#x27;</span> },\n                    ];\n                    <span class="hljs-title function_">closeToast</span>();\n                }, <span class="hljs-number">1000</span>);\n            }\n        };\n        <span class="hljs-keyword">const</span> <span class="hljs-title function_">onFinish</span> = (<span class="hljs-params">{ selectedOptions }</span>) =&gt; {\n            show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n            fieldValue.<span class="hljs-property">value</span> = selectedOptions\n                .<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">option</span>) =&gt;</span> option.<span class="hljs-property">text</span>)\n                .<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;/&#x27;</span>);\n        };\n\n        <span class="hljs-keyword">return</span> {\n            show,\n            options,\n            onFinish,\n            fieldValue,\n            cascaderValue,\n        };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="zi-ding-yi-zi-duan-ming" tabindex="-1">自定义字段名</h3>\n<p>通过 <code>field-names</code> 属性可以自定义 <code>options</code> 里的字段名称。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-cascader</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;code&quot;</span>\n    <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;请选择所在地区&quot;</span>\n    <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n    <span class="hljs-attr">:field-names</span>=<span class="hljs-string">&quot;fieldNames&quot;</span>\n/&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> code = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#x27;&#x27;</span>);\n        <span class="hljs-keyword">const</span> fieldNames = {\n            <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;name&#x27;</span>,\n            <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;code&#x27;</span>,\n            <span class="hljs-attr">children</span>: <span class="hljs-string">&#x27;items&#x27;</span>,\n        };\n        <span class="hljs-keyword">const</span> options = [\n            {\n                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;浙江省&#x27;</span>,\n                <span class="hljs-attr">code</span>: <span class="hljs-string">&#x27;330000&#x27;</span>,\n                <span class="hljs-attr">items</span>: [{ <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;杭州市&#x27;</span>, <span class="hljs-attr">code</span>: <span class="hljs-string">&#x27;330100&#x27;</span> }],\n            },\n            {\n                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;江苏省&#x27;</span>,\n                <span class="hljs-attr">code</span>: <span class="hljs-string">&#x27;320000&#x27;</span>,\n                <span class="hljs-attr">items</span>: [{ <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;南京市&#x27;</span>, <span class="hljs-attr">code</span>: <span class="hljs-string">&#x27;320100&#x27;</span> }],\n            },\n        ];\n\n        <span class="hljs-keyword">return</span> {\n            code,\n            options,\n            fieldNames,\n        };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="zi-ding-yi-xuan-xiang-shang-fang-nei-rong" tabindex="-1">自定义选项上方内容</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-cascader</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;code&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;请选择所在地区&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">options-top</span>=<span class="hljs-string">&quot;{ tabIndex }&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;current-level&quot;</span>&gt;</span>当前为第 {{ tabIndex + 1 }} 级<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-cascader</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n    <span class="hljs-selector-class">.current-level</span> {\n        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">14px</span>;\n        <span class="hljs-attribute">padding</span>: <span class="hljs-number">16px</span> <span class="hljs-number">16px</span> <span class="hljs-number">0</span>;\n        <span class="hljs-attribute">color</span>: <span class="hljs-built_in">var</span>(--mi-gray-<span class="hljs-number">6</span>);\n    }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> code = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#x27;&#x27;</span>);\n        <span class="hljs-keyword">const</span> options = [\n            {\n                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;浙江省&#x27;</span>,\n                <span class="hljs-attr">code</span>: <span class="hljs-string">&#x27;330000&#x27;</span>,\n                <span class="hljs-attr">items</span>: [{ <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;杭州市&#x27;</span>, <span class="hljs-attr">code</span>: <span class="hljs-string">&#x27;330100&#x27;</span> }],\n            },\n            {\n                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;江苏省&#x27;</span>,\n                <span class="hljs-attr">code</span>: <span class="hljs-string">&#x27;320000&#x27;</span>,\n                <span class="hljs-attr">items</span>: [{ <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;南京市&#x27;</span>, <span class="hljs-attr">code</span>: <span class="hljs-string">&#x27;320100&#x27;</span> }],\n            },\n        ];\n\n        <span class="hljs-keyword">return</span> {\n            code,\n            options,\n        };\n    },\n};\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="mi-doc-card"><h3 id="props" tabindex="-1">Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>v-model</td>\n<td>选中项的值</td>\n<td><em>string | number</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>title</td>\n<td>顶部标题</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>options</td>\n<td>可选项数据源</td>\n<td><em>CascaderOption[]</em></td>\n<td><code>[]</code></td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>未选中时的提示文案</td>\n<td><em>string</em></td>\n<td><code>请选择</code></td>\n</tr>\n<tr>\n<td>active-color</td>\n<td>选中状态的高亮颜色</td>\n<td><em>string</em></td>\n<td><code>#1989fa</code></td>\n</tr>\n<tr>\n<td>swipeable</td>\n<td>是否开启手势左右滑动切换</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>closeable</td>\n<td>是否显示关闭图标</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>show-header</td>\n<td>是否展示标题栏</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>close-icon</td>\n<td>关闭图标名称或图片链接，等同于 Icon 组件的 <a href="#/zh-CN/icon#props" target="_blank">name 属性</a></td>\n<td><em>string</em></td>\n<td><code>cross</code></td>\n</tr>\n<tr>\n<td>field-names</td>\n<td>自定义 <code>options</code> 结构中的字段</td>\n<td><em>CascaderFieldNames</em></td>\n<td><code>{ text: \'text\', value: \'value\', children: \'children\' }</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="cascaderoption-shu-ju-jie-gou" tabindex="-1">CascaderOption 数据结构</h3>\n<p><code>options</code> 属性是一个由对象构成的数组，数组中的每个对象配置一个可选项，对象可以包含以下值：</p>\n<table>\n<thead>\n<tr>\n<th>键名</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>text</td>\n<td>选项文字（必填）</td>\n<td><em>string</em></td>\n</tr>\n<tr>\n<td>value</td>\n<td>选项对应的值（必填）</td>\n<td><em>string | number</em></td>\n</tr>\n<tr>\n<td>color</td>\n<td>选项文字颜色</td>\n<td><em>string</em></td>\n</tr>\n<tr>\n<td>children</td>\n<td>子选项列表</td>\n<td><em>CascaderOption[]</em></td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>是否禁用选项</td>\n<td><em>boolean</em></td>\n</tr>\n<tr>\n<td>className</td>\n<td>为对应列添加额外的 class</td>\n<td><em>string | Array | object</em></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="events" tabindex="-1">Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>change</td>\n<td>选中项变化时触发</td>\n<td><em>{ value: string | number, selectedOptions: CascaderOption[], tabIndex: number }</em></td>\n</tr>\n<tr>\n<td>finish</td>\n<td>全部选项选择完成后触发</td>\n<td><em>{ value: string | number, selectedOptions: CascaderOption[], tabIndex: number }</em></td>\n</tr>\n<tr>\n<td>close</td>\n<td>点击关闭图标时触发</td>\n<td>-</td>\n</tr>\n<tr>\n<td>click-tab</td>\n<td>点击标签时触发</td>\n<td><em>tabIndex: number, title: string</em></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="slots" tabindex="-1">Slots</h3>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n<th>参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>title</td>\n<td>自定义顶部标题</td>\n<td>-</td>\n</tr>\n<tr>\n<td>option</td>\n<td>自定义选项文字</td>\n<td><em>{ option: CascaderOption, selected: boolean }</em></td>\n</tr>\n<tr>\n<td>options-top</td>\n<td>自定义选项上方的内容</td>\n<td><em>{ tabIndex: number }</em></td>\n</tr>\n<tr>\n<td>options-bottom</td>\n<td>自定义选项下方的内容</td>\n<td><em>{ tabIndex: number }</em></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3>\n<p>组件导出以下类型定义：</p>\n<pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n    <span class="hljs-title class_">CascaderProps</span>,\n    <span class="hljs-title class_">CascaderOption</span>,\n    <span class="hljs-title class_">CascaderFieldNames</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n</code></pre>\n</div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2>\n<div class="mi-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3>\n<p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider" target="_blank">ConfigProvider 组件</a>。</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>--mi-cascader-header-height</td>\n<td><em>48px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-cascader-header-padding</td>\n<td><em>0 var(--mi-padding-md)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-cascader-title-font-size</td>\n<td><em>var(--mi-font-size-lg)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-cascader-title-line-height</td>\n<td><em>20px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-cascader-close-icon-size</td>\n<td><em>22px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-cascader-close-icon-color</td>\n<td><em>var(--mi-gray-5)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-cascader-selected-icon-size</td>\n<td><em>18px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-cascader-tabs-height</td>\n<td><em>48px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-cascader-active-color</td>\n<td><em>var(--mi-danger-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-cascader-options-height</td>\n<td><em>384px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-cascader-option-disabled-color</td>\n<td><em>var(--mi-text-color-3)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-cascader-tab-color</td>\n<td><em>var(--mi-text-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-cascader-unselected-tab-color</td>\n<td><em>var(--mi-text-color-2)</em></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div>'},null,8,l))}}}]);