"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["5475"],{4263:function(s,n,a){a.r(n),a.d(n,{default:function(){return e}});var l=a(1147);let t=["innerHTML"],e={setup:()=>({html:""}),render:()=>((0,l.wg)(),(0,l.iD)("div",{class:"mi-doc-markdown-body",innerHTML:'<h1>useToggle</h1>\n<div class="mi-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>用于在 <code>true</code> 和 <code>false</code> 之间进行切换。</p>\n</div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2>\n<div class="mi-doc-card"><h3 id="ji-ben-yong-fa" tabindex="-1">基本用法</h3>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { useToggle } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/use&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> [state, toggle] = <span class="hljs-title function_">useToggle</span>();\n\n        <span class="hljs-title function_">toggle</span>(<span class="hljs-literal">true</span>);\n        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(state.<span class="hljs-property">value</span>); <span class="hljs-comment">// -&gt; true</span>\n\n        <span class="hljs-title function_">toggle</span>(<span class="hljs-literal">false</span>);\n        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(state.<span class="hljs-property">value</span>); <span class="hljs-comment">// -&gt; false</span>\n\n        <span class="hljs-title function_">toggle</span>();\n        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(state.<span class="hljs-property">value</span>); <span class="hljs-comment">// -&gt; true</span>\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="she-zhi-mo-ren-zhi" tabindex="-1">设置默认值</h3>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { useToggle } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/use&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> [state, toggle] = <span class="hljs-title function_">useToggle</span>(<span class="hljs-literal">true</span>);\n        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(state.<span class="hljs-property">value</span>); <span class="hljs-comment">// -&gt; true</span>\n    },\n};\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="mi-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3>\n<pre><code class="language-ts"><span class="hljs-keyword">function</span> <span class="hljs-title function_">useToggle</span>(<span class="hljs-params">\n    <span class="hljs-attr">defaultValue</span>: <span class="hljs-built_in">boolean</span>,\n</span>): [<span class="hljs-title class_">Ref</span>&lt;<span class="hljs-built_in">boolean</span>&gt;, <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">newValue</span>: <span class="hljs-built_in">boolean</span></span>) =&gt;</span> <span class="hljs-built_in">void</span>];\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="can-shu" tabindex="-1">参数</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>defaultValue</td>\n<td>默认值</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="fan-hui-zhi" tabindex="-1">返回值</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>state</td>\n<td>状态值</td>\n<td><em>Ref&lt;boolean&gt;</em></td>\n</tr>\n<tr>\n<td>toggle</td>\n<td>切换状态值的函数</td>\n<td><em>(newValue?: boolean) =&gt; void</em></td>\n</tr>\n</tbody>\n</table>\n</div>'},null,8,t))}}}]);