"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["8600"],{6761:function(s,n,a){a.r(n),a.d(n,{default:function(){return e}});var l=a(1147);let t=["innerHTML"],e={setup:()=>({html:""}),render:()=>((0,l.wg)(),(0,l.iD)("div",{class:"mi-doc-markdown-body",innerHTML:'<h1>useCustomFieldValue</h1>\n<div class="mi-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>用于自定义 Form 组件中的表单项。</p>\n</div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2>\n<div class="mi-doc-card"><h3 id="ji-ben-yong-fa" tabindex="-1">基本用法</h3>\n<p>如果需要自定义表单项，可以在 Field 组件的 <code>input</code> 插槽中插入你的自定义组件，并在自定义组件内部调用 <code>useCustomFieldValue</code> 方法。</p>\n<h4 id="zi-ding-yi-zu-jian" tabindex="-1">自定义组件</h4>\n<p>首先，在你的自定义组件中，调用 <code>useCustomFieldValue</code> 方法，并传入一个回调函数，这个函数返回值为表单项的值。</p>\n<pre><code class="language-js"><span class="hljs-comment">// MyComponent.vue</span>\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { useCustomFieldValue } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/use&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> myValue = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n\n        <span class="hljs-comment">// 此处传入的值会替代 Field 组件内部的 value</span>\n        <span class="hljs-title function_">useCustomFieldValue</span>(<span class="hljs-function">() =&gt;</span> myValue.<span class="hljs-property">value</span>);\n\n        <span class="hljs-keyword">return</span> { myValue };\n    },\n};\n</code></pre>\n<h4 id="biao-dan" tabindex="-1">表单</h4>\n<p>接着，在 Form 组件中嵌入你的自定义组件，当提交表单时，即可获取到自定义表单项的值。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-form</span>&gt;</span>\n    <span class="hljs-comment">&lt;!-- 这是一个自定义表单项 --&gt;</span>\n    <span class="hljs-comment">&lt;!-- 当表单提交时，会包括 useCustomFieldValue 中传入的值 --&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-field</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;my-field&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;自定义表单项&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">input</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">my-component</span> /&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">mi-field</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-form</span>&gt;</span>\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="mi-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3>\n<pre><code class="language-ts"><span class="hljs-keyword">function</span> <span class="hljs-title function_">useCustomFieldValue</span>(<span class="hljs-params"><span class="hljs-attr">customValue</span>: () =&gt; <span class="hljs-built_in">unknown</span></span>): <span class="hljs-built_in">void</span>;\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="can-shu" tabindex="-1">参数</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>customValue</td>\n<td>获取表单项值的函数</td>\n<td><em>() =&gt; unknown</em></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div>'},null,8,t))}}}]);