"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["6196"],{1778:function(s,n,a){a.r(n),a.d(n,{default:function(){return p}});var t=a(1147);let l=["innerHTML"],p={setup:()=>({html:""}),render:()=>((0,t.wg)(),(0,t.iD)("div",{class:"mi-doc-markdown-body",innerHTML:'<h1>PullRefresh 下拉刷新</h1>\n<div class="mi-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>用于提供下拉刷新的交互操作。</p>\n</div><div class="mi-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3>\n<p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce" target="_blank">组件注册</a>。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">PullRefresh</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">PullRefresh</span>);\n</code></pre>\n</div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2>\n<div class="mi-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3>\n<p>下拉刷新时会触发 <code>refresh</code> 事件，在事件的回调函数中可以进行同步或异步操作，操作完成后将 <code>v-model</code> 设置为 <code>false</code>，表示加载完成。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-pull-refresh</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;loading&quot;</span> @<span class="hljs-attr">refresh</span>=<span class="hljs-string">&quot;onRefresh&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>刷新次数: {{ count }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-pull-refresh</span>&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { showToast } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> count = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n        <span class="hljs-keyword">const</span> loading = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n        <span class="hljs-keyword">const</span> <span class="hljs-title function_">onRefresh</span> = (<span class="hljs-params"></span>) =&gt; {\n            <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n                <span class="hljs-title function_">showToast</span>(<span class="hljs-string">&#x27;刷新成功&#x27;</span>);\n                loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n                count.<span class="hljs-property">value</span>++;\n            }, <span class="hljs-number">1000</span>);\n        };\n\n        <span class="hljs-keyword">return</span> {\n            count,\n            loading,\n            onRefresh,\n        };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="cheng-gong-ti-shi" tabindex="-1">成功提示</h3>\n<p>通过 <code>success-text</code> 可以设置刷新成功后的顶部提示文案。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-pull-refresh</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;isLoading&quot;</span>\n    <span class="hljs-attr">success-text</span>=<span class="hljs-string">&quot;刷新成功&quot;</span>\n    @<span class="hljs-attr">refresh</span>=<span class="hljs-string">&quot;onRefresh&quot;</span>\n&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>刷新次数: {{ count }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-pull-refresh</span>&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="zi-ding-yi-ti-shi" tabindex="-1">自定义提示</h3>\n<p>通过插槽可以自定义下拉刷新过程中的提示内容。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-pull-refresh</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;isLoading&quot;</span> <span class="hljs-attr">:head-height</span>=<span class="hljs-string">&quot;80&quot;</span> @<span class="hljs-attr">refresh</span>=<span class="hljs-string">&quot;onRefresh&quot;</span>&gt;</span>\n    <span class="hljs-comment">&lt;!-- 下拉提示，通过 scale 实现一个缩放效果 --&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">pulling</span>=<span class="hljs-string">&quot;props&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">img</span>\n            <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;doge&quot;</span>\n            <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/wuxingxi888/CDN_IMG_BED/doge.png&quot;</span>\n            <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ transform: `scale(${props.distance / 80})` }&quot;</span>\n        /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n    <span class="hljs-comment">&lt;!-- 释放提示 --&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">loosing</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">img</span>\n            <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;doge&quot;</span>\n            <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/wuxingxi888/CDN_IMG_BED/doge.png&quot;</span>\n        /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n    <span class="hljs-comment">&lt;!-- 加载提示 --&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">loading</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">img</span>\n            <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;doge&quot;</span>\n            <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/wuxingxi888/CDN_IMG_BED/doge-fire.jpeg&quot;</span>\n        /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>刷新次数: {{ count }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-pull-refresh</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n    <span class="hljs-selector-class">.doge</span> {\n        <span class="hljs-attribute">width</span>: <span class="hljs-number">140px</span>;\n        <span class="hljs-attribute">height</span>: <span class="hljs-number">72px</span>;\n        <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">8px</span>;\n        <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">4px</span>;\n    }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="zi-ding-yi-dong-hua-ti-shi" tabindex="-1">自定义动画提示</h3>\n<p>通过插槽可以自定义下拉刷新过程中的提示内容。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-pull-refresh</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;loading&quot;</span> <span class="hljs-attr">head-height</span>=<span class="hljs-string">&quot;80&quot;</span> @<span class="hljs-attr">refresh</span>=<span class="hljs-string">&quot;onRefresh(true)&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">pulling</span>=<span class="hljs-string">&quot;{ distance }&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>\n            <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;loader&quot;</span>\n            <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ transform: `scale(${distance / 80})` }&quot;</span>\n        &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">loosing</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;loader&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">loading</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;loader&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{ tips }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-pull-refresh</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n    <span class="hljs-selector-class">.loader</span> {\n        <span class="hljs-attribute">width</span>: <span class="hljs-number">80px</span>;\n        aspect-ratio: <span class="hljs-number">1</span>;\n        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;\n        <span class="hljs-attribute">margin</span>: auto;\n        <span class="hljs-attribute">box-sizing</span>: border-box;\n        <span class="hljs-attribute">display</span>: grid;\n        <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;\n        <span class="hljs-attribute">filter</span>: <span class="hljs-built_in">blur</span>(<span class="hljs-number">5px</span>) <span class="hljs-built_in">contrast</span>(<span class="hljs-number">10</span>) <span class="hljs-built_in">hue-rotate</span>(<span class="hljs-number">300deg</span>);\n        <span class="hljs-attribute">mix-blend-mode</span>: darken;\n    }\n\n    <span class="hljs-selector-class">.loader</span><span class="hljs-selector-pseudo">:before</span>,\n    <span class="hljs-selector-class">.loader</span><span class="hljs-selector-pseudo">:after</span> {\n        <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;&#x27;</span>;\n        <span class="hljs-attribute">grid-area</span>: <span class="hljs-number">1</span>/<span class="hljs-number">1</span>;\n        <span class="hljs-attribute">width</span>: <span class="hljs-number">20px</span>;\n        <span class="hljs-attribute">height</span>: <span class="hljs-number">20px</span>;\n        <span class="hljs-attribute">background</span>: <span class="hljs-number">#ffff00</span>;\n        <span class="hljs-attribute">animation</span>: l7 <span class="hljs-number">2s</span> infinite;\n    }\n\n    <span class="hljs-selector-class">.loader</span><span class="hljs-selector-pseudo">:after</span> {\n        <span class="hljs-attribute">animation-delay</span>: -<span class="hljs-number">1s</span>;\n    }\n\n    <span class="hljs-keyword">@keyframes</span> l7 {\n        <span class="hljs-number">0%</span> {\n            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>);\n        }\n\n        <span class="hljs-number">25%</span> {\n            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(<span class="hljs-number">100%</span>, <span class="hljs-number">0</span>);\n        }\n\n        <span class="hljs-number">50%</span> {\n            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(<span class="hljs-number">100%</span>, <span class="hljs-number">100%</span>);\n        }\n\n        <span class="hljs-number">75%</span> {\n            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(<span class="hljs-number">0</span>, <span class="hljs-number">100%</span>);\n        }\n\n        <span class="hljs-number">100%</span> {\n            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>);\n        }\n    }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="mi-doc-card"><h3 id="props" tabindex="-1">Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>v-model</td>\n<td>是否处于加载中状态</td>\n<td><em>boolean</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>pulling-text</td>\n<td>下拉过程提示文案</td>\n<td><em>string</em></td>\n<td><code>下拉即可刷新...</code></td>\n</tr>\n<tr>\n<td>loosing-text</td>\n<td>释放过程提示文案</td>\n<td><em>string</em></td>\n<td><code>释放即可刷新...</code></td>\n</tr>\n<tr>\n<td>loading-text</td>\n<td>加载过程提示文案</td>\n<td><em>string</em></td>\n<td><code>加载中...</code></td>\n</tr>\n<tr>\n<td>success-text</td>\n<td>刷新成功提示文案</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>success-duration</td>\n<td>刷新成功提示展示时长(ms)</td>\n<td><em>number | string</em></td>\n<td><code>500</code></td>\n</tr>\n<tr>\n<td>animation-duration</td>\n<td>动画时长</td>\n<td><em>number | string</em></td>\n<td><code>300</code></td>\n</tr>\n<tr>\n<td>head-height</td>\n<td>顶部内容高度</td>\n<td><em>number | string</em></td>\n<td><code>50</code></td>\n</tr>\n<tr>\n<td>pull-distance</td>\n<td>触发下拉刷新的距离</td>\n<td><em>number | string</em></td>\n<td>与 <code>head-height</code> 一致</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>是否禁用下拉刷新</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="events" tabindex="-1">Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>refresh</td>\n<td>下拉刷新时触发</td>\n<td>-</td>\n</tr>\n<tr>\n<td>change</td>\n<td>拖动时或状态改变时触发</td>\n<td><em>{ status: string, distance: number }</em></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="slots" tabindex="-1">Slots</h3>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n<th>参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>default</td>\n<td>自定义内容</td>\n<td>-</td>\n</tr>\n<tr>\n<td>normal</td>\n<td>非下拉状态时顶部内容</td>\n<td>-</td>\n</tr>\n<tr>\n<td>pulling</td>\n<td>下拉过程中顶部内容</td>\n<td><em>{ distance: number }</em></td>\n</tr>\n<tr>\n<td>loosing</td>\n<td>释放过程中顶部内容</td>\n<td><em>{ distance: number }</em></td>\n</tr>\n<tr>\n<td>loading</td>\n<td>加载过程中顶部内容</td>\n<td><em>{ distance: number }</em></td>\n</tr>\n<tr>\n<td>success</td>\n<td>刷新成功提示内容</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3>\n<p>组件导出以下类型定义：</p>\n<pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">PullRefreshProps</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n</code></pre>\n</div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2>\n<div class="mi-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3>\n<p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider" target="_blank">ConfigProvider 组件</a>。</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>--mi-pull-refresh-head-height</td>\n<td><em>50px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-pull-refresh-head-font-size</td>\n<td><em>var(--mi-font-size-md)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-pull-refresh-head-text-color</td>\n<td><em>var(--mi-text-color-2)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-pull-refresh-loading-icon-size</td>\n<td><em>16px</em></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2>\n<div class="mi-doc-card"><h3 id="pullrefresh-de-nei-rong-wei-tian-man-ping-mu-shi-zhi-you-yi-bu-fen-qu-yu-ke-yi-xia-la" tabindex="-1">PullRefresh 的内容未填满屏幕时，只有一部分区域可以下拉？</h3>\n<p>默认情况下，下拉区域的高度是和内容高度保持一致的，如果需要让下拉区域始终为全屏，可以给 PullRefresh 设置一个与屏幕大小相等的最小高度：</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-pull-refresh</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;min-height: 100vh;&quot;</span> /&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="pullrefresh-de-chu-fa-tiao-jian-shi" tabindex="-1">PullRefresh 的触发条件是？</h3>\n<p>PullRefresh 的触发条件是「父级滚动元素的滚动条在顶部位置」。</p>\n<ul>\n<li>如果最近一个可滚动的父级元素是 <code>window</code>，则要求 <code>window.pageYOffset === 0</code>。</li>\n<li>如果最近一个可滚动的父级元素是 <code>Element</code>，则要求 <code>Element.scrollTop === 0</code>。</li>\n</ul>\n</div><div class="mi-doc-card"><h3 id="zai-zhuo-mian-duan-wu-fa-cao-zuo-zu-jian" tabindex="-1">在桌面端无法操作组件？</h3>\n<p>参见<a href="#/zh-CN/advanced-usage#zhuo-mian-duan-gua-pei" target="_blank">桌面端适配</a>。</p>\n</div>'},null,8,l))}}}]);