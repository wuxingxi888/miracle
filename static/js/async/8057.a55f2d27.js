"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["8057"],{5512:function(s,n,t){t.r(n),t.d(n,{default:function(){return d}});var a=t(1147);let l=["innerHTML"],d={setup:()=>({html:""}),render:()=>((0,a.wg)(),(0,a.iD)("div",{class:"mi-doc-markdown-body",innerHTML:'<h1>ActionBar 动作栏</h1>\n<div class="mi-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>用于为页面相关操作提供便捷交互。</p>\n</div><div class="mi-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3>\n<p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce" target="_blank">组件注册</a>。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">ActionBar</span>, <span class="hljs-title class_">ActionBarIcon</span>, <span class="hljs-title class_">ActionBarButton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ActionBar</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ActionBarIcon</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ActionBarButton</span>);\n</code></pre>\n</div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2>\n<div class="mi-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-action-bar</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;chat-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;客服&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;onClickIcon&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;cart-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;购物车&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;onClickIcon&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;shop-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;店铺&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;onClickIcon&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-action-bar-button</span>\n        <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span>\n        <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;立即购买&quot;</span>\n        @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;onClickButton&quot;</span>\n    /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-action-bar</span>&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { showToast } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> <span class="hljs-title function_">onClickIcon</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title function_">showToast</span>(<span class="hljs-string">&#x27;点击图标&#x27;</span>);\n        <span class="hljs-keyword">const</span> <span class="hljs-title function_">onClickButton</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title function_">showToast</span>(<span class="hljs-string">&#x27;点击按钮&#x27;</span>);\n        <span class="hljs-keyword">return</span> {\n            onClickIcon,\n            onClickButton,\n        };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="hui-biao-ti-shi" tabindex="-1">徽标提示</h3>\n<p>在 ActionBarIcon 组件上设置 <code>dot</code> 属性后，会在图标右上角展示一个小红点；设置 <code>badge</code> 属性后，会在图标右上角展示相应的徽标。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-action-bar</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;chat-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;客服&quot;</span> <span class="hljs-attr">dot</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;cart-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;购物车&quot;</span> <span class="hljs-attr">badge</span>=<span class="hljs-string">&quot;5&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;shop-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;店铺&quot;</span> <span class="hljs-attr">badge</span>=<span class="hljs-string">&quot;12&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-action-bar-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;加入购物车&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-action-bar-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;立即购买&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-action-bar</span>&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="zi-ding-yi-tu-biao-yan-se" tabindex="-1">自定义图标颜色</h3>\n<p>通过 ActionBarIcon 的 <code>color</code> 属性可以自定义图标的颜色。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-action-bar</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;chat-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;客服&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;cart-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;购物车&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;star&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;已收藏&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#ff5000&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-action-bar-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;加入购物车&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-action-bar-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;立即购买&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-action-bar</span>&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="zi-ding-yi-an-niu-yan-se" tabindex="-1">自定义按钮颜色</h3>\n<p>通过 ActionBarButton 的 <code>color</code> 属性可以自定义按钮的颜色，支持传入 <code>linear-gradient</code> 渐变色。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-action-bar</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;chat-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;客服&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;shop-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;店铺&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-action-bar-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#be99ff&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;加入购物车&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-action-bar-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#7232dd&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;立即购买&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-action-bar</span>&gt;</span>\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="mi-doc-card"><h3 id="actionbar-props" tabindex="-1">ActionBar Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>safe-area-inset-bottom</td>\n<td>是否开启<a href="#/zh-CN/advanced-usage#di-bu-an-quan-qu-gua-pei" target="_blank">底部安全区适配</a></td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>是否在标签位置生成一个等高的占位元素</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="actionbaricon-props" tabindex="-1">ActionBarIcon Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>text</td>\n<td>按钮文字</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>图标</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>color</td>\n<td>图标颜色</td>\n<td><em>string</em></td>\n<td><code>#323233</code></td>\n</tr>\n<tr>\n<td>icon-class</td>\n<td>图标额外类名</td>\n<td><em>string | Array | object</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>icon-prefix</td>\n<td>图标类名前缀，等同于 Icon 组件的 <a href="#/zh-CN/icon#props" target="_blank">class-prefix 属性</a></td>\n<td><em>string</em></td>\n<td><code>mi-icon</code></td>\n</tr>\n<tr>\n<td>dot</td>\n<td>是否显示图标右上角小红点</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>badge</td>\n<td>图标右上角徽标的内容</td>\n<td><em>number | string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>badge-props</td>\n<td>自定义徽标的属性，传入的对象会被透传给 <a href="#/zh-CN/badge#props" target="_blank">Badge 组件的 props</a></td>\n<td><em>BadgeProps</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>url</td>\n<td>点击后跳转的链接地址</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>to</td>\n<td>点击后跳转的目标路由对象，等同于 Vue Router 的 <a href="https://router.vuejs.org/zh/api/interfaces/RouterLinkProps.html#Properties-to" target="_blank">to 属性</a></td>\n<td><em>string | object</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>replace</td>\n<td>是否在跳转时替换当前页面历史</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="actionbarbutton-props" tabindex="-1">ActionBarButton Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>text</td>\n<td>按钮文字</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>type</td>\n<td>按钮类型，可选值为 <code>default</code> <code>primary</code> <code>success</code> <code>warning</code> <code>danger</code></td>\n<td><em>string</em></td>\n<td><code>default</code></td>\n</tr>\n<tr>\n<td>color</td>\n<td>按钮颜色，支持传入 <code>linear-gradient</code> 渐变色</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>左侧图标名称或图片链接，等同于 Icon 组件的 <a href="#/zh-CN/icon#props" target="_blank">name 属性</a></td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>是否禁用按钮</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>loading</td>\n<td>是否显示为加载状态</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>url</td>\n<td>点击后跳转的链接地址</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>to</td>\n<td>点击后跳转的目标路由对象，等同于 Vue Router 的 <a href="https://router.vuejs.org/zh/api/interfaces/RouterLinkProps.html#Properties-to" target="_blank">to 属性</a></td>\n<td><em>string | object</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>replace</td>\n<td>是否在跳转时替换当前页面历史</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="actionbaricon-slots" tabindex="-1">ActionBarIcon Slots</h3>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>default</td>\n<td>文本内容</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>自定义图标</td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="actionbarbutton-slots" tabindex="-1">ActionBarButton Slots</h3>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>default</td>\n<td>按钮显示内容</td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3>\n<p>组件导出以下类型定义：</p>\n<pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n    <span class="hljs-title class_">ActionBarProps</span>,\n    <span class="hljs-title class_">ActionBarIconProps</span>,\n    <span class="hljs-title class_">ActionBarButtonProps</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n</code></pre>\n</div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2>\n<div class="mi-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3>\n<p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider" target="_blank">ConfigProvider 组件</a>。</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>--mi-action-bar-background</td>\n<td><em>var(--mi-background-2)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-bar-height</td>\n<td><em>50px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-bar-icon-width</td>\n<td><em>48px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-bar-icon-height</td>\n<td><em>100%</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-bar-icon-color</td>\n<td><em>var(--mi-text-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-bar-icon-size</td>\n<td><em>18px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-bar-icon-font-size</td>\n<td><em>var(--mi-font-size-xs)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-bar-icon-active-color</td>\n<td><em>var(--mi-active-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-bar-icon-text-color</td>\n<td><em>var(--mi-text-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-bar-icon-background</td>\n<td><em>var(--mi-background-2)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-bar-button-height</td>\n<td><em>40px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-bar-button-warning-color</td>\n<td><em>var(--mi-gradient-orange)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-bar-button-danger-color</td>\n<td><em>var(--mi-gradient-red)</em></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div>'},null,8,l))}}}]);