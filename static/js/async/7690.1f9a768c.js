"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["7690"],{5223:function(s,n,a){a.r(n),a.d(n,{default:function(){return e}});var t=a(1147);let l=["innerHTML"],e={setup:()=>({html:""}),render:()=>((0,t.wg)(),(0,t.iD)("div",{class:"mi-doc-markdown-body",innerHTML:'<h1>RollingText 翻滚文本动效</h1>\n<div class="mi-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>文本翻滚动效，可以翻滚数字和其他类型文本。</p>\n</div><div class="mi-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3>\n<p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce" target="_blank">组件注册</a>。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">RollingText</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">RollingText</span>);\n</code></pre>\n</div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2>\n<div class="mi-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3>\n<p>你可以通过 <code>start-num</code> 设置起始数值，<code>target-num</code> 设置目标数值。RollingText 组件会自动开始动画，从起始数值翻滚到目标数值。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-rolling-text</span> <span class="hljs-attr">:start-num</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">:target-num</span>=<span class="hljs-string">&quot;123&quot;</span> /&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="she-zhi-fan-gun-fang-xiang" tabindex="-1">设置翻滚方向</h3>\n<p>你可以通过 <code>direction</code> 属性设置数字的翻滚方向，默认为向下翻滚，设置为 <code>up</code> 即可向上翻滚。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-rolling-text</span> <span class="hljs-attr">:start-num</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">:target-num</span>=<span class="hljs-string">&quot;432&quot;</span> <span class="hljs-attr">direction</span>=<span class="hljs-string">&quot;up&quot;</span> /&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="she-zhi-ge-shu-wei-ting-zhi-shun-xu" tabindex="-1">设置各数位停止顺序</h3>\n<p>你可以通过 <code>stop-order</code> 属性设置动画各个数位的停止先后顺序。默认先停止高位，设置为 <code>rtl</code> 可以先从个位停止。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-rolling-text</span> <span class="hljs-attr">:start-num</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">:target-num</span>=<span class="hljs-string">&quot;54321&quot;</span> <span class="hljs-attr">stop-order</span>=<span class="hljs-string">&quot;rtl&quot;</span> /&gt;</span>\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="fan-zhuan-fei-shu-zi-nei-rong" tabindex="-1">翻转非数字内容</h3>\n<p>你可以使用 <code>text-list</code> 属性设置非数字内容的翻转。组件会从数组的第一项翻转到最后一项，请确保数组长度大于等于 2，以及每一项的长度一致。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-rolling-text</span> <span class="hljs-attr">:text-list</span>=<span class="hljs-string">&quot;textList&quot;</span> <span class="hljs-attr">:duration</span>=<span class="hljs-string">&quot;1&quot;</span> /&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> textList = <span class="hljs-title function_">ref</span>([\n            <span class="hljs-string">&#x27;aaaaa&#x27;</span>,\n            <span class="hljs-string">&#x27;bbbbb&#x27;</span>,\n            <span class="hljs-string">&#x27;ccccc&#x27;</span>,\n            <span class="hljs-string">&#x27;ddddd&#x27;</span>,\n            <span class="hljs-string">&#x27;eeeee&#x27;</span>,\n            <span class="hljs-string">&#x27;fffff&#x27;</span>,\n            <span class="hljs-string">&#x27;ggggg&#x27;</span>,\n        ]);\n        <span class="hljs-keyword">return</span> { textList };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="zi-ding-yi-yang-shi" tabindex="-1">自定义样式</h3>\n<p>RollingText 组件提供了一些 CSS 变量，你可以覆盖这些变量来自定义样式，也可以直接修改组件的样式。此外，你还可以通过 <code>height</code> 属性设置数字高度。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-rolling-text</span>\n    <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-rolling-text&quot;</span>\n    <span class="hljs-attr">:height</span>=<span class="hljs-string">&quot;54&quot;</span>\n    <span class="hljs-attr">:start-num</span>=<span class="hljs-string">&quot;12345&quot;</span>\n    <span class="hljs-attr">:target-num</span>=<span class="hljs-string">&quot;54321&quot;</span>\n/&gt;</span>\n</code></pre>\n<pre><code class="language-css"><span class="hljs-selector-class">.my-rolling-text</span> {\n    <span class="hljs-attr">--mi-rolling-text-background</span>: <span class="hljs-number">#1989fa</span>;\n    <span class="hljs-attr">--mi-rolling-text-color</span>: white;\n    <span class="hljs-attr">--mi-rolling-text-font-size</span>: <span class="hljs-number">24px</span>;\n    <span class="hljs-attr">--mi-rolling-text-gap</span>: <span class="hljs-number">6px</span>;\n    <span class="hljs-attr">--mi-rolling-text-item-border-radius</span>: <span class="hljs-number">5px</span>;\n    <span class="hljs-attr">--mi-rolling-text-item-width</span>: <span class="hljs-number">40px</span>;\n}\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="shou-dong-kong-zhi" tabindex="-1">手动控制</h3>\n<p>通过 ref 获取到组件实例后，你可以调用 <code>start</code>、<code>reset</code> 方法，<code>start</code> 方法用于开始动画，<code>reset</code> 方法用于重置动画。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-rolling-text</span>\n    <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;rollingTextRef&quot;</span>\n    <span class="hljs-attr">:start-num</span>=<span class="hljs-string">&quot;0&quot;</span>\n    <span class="hljs-attr">:target-num</span>=<span class="hljs-string">&quot;54321&quot;</span>\n    <span class="hljs-attr">:auto-start</span>=<span class="hljs-string">&quot;false&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-grid</span> <span class="hljs-attr">clickable</span> <span class="hljs-attr">:column-num</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-grid-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;play-circle-o&quot;</span> <span class="hljs-attr">:text</span>=<span class="hljs-string">&quot;start&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;start&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mi-grid-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;replay&quot;</span> <span class="hljs-attr">:text</span>=<span class="hljs-string">&quot;reset&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;reset&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-grid</span>&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> rollingTextRef = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">null</span>);\n        <span class="hljs-keyword">const</span> <span class="hljs-title function_">start</span> = (<span class="hljs-params"></span>) =&gt; {\n            rollingTextRef.<span class="hljs-property">value</span>.<span class="hljs-title function_">start</span>();\n        };\n        <span class="hljs-keyword">const</span> <span class="hljs-title function_">reset</span> = (<span class="hljs-params"></span>) =&gt; {\n            rollingTextRef.<span class="hljs-property">value</span>.<span class="hljs-title function_">reset</span>();\n        };\n        <span class="hljs-keyword">return</span> { rollingTextRef, start, reset };\n    },\n};\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="mi-doc-card"><h3 id="props" tabindex="-1">Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>start-num</td>\n<td>起始数值</td>\n<td><em>number</em></td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td>target-num</td>\n<td>目标数值</td>\n<td><em>number</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>text-list</td>\n<td>内容数组，用于翻转非数字内容</td>\n<td><em>string[]</em></td>\n<td><code>[]</code></td>\n</tr>\n<tr>\n<td>duration</td>\n<td>动画时长，单位为秒</td>\n<td><em>number</em></td>\n<td><code>2</code></td>\n</tr>\n<tr>\n<td>direction</td>\n<td>文本翻滚方向，值为 <code>down</code> 和 <code>up</code></td>\n<td><em>string</em></td>\n<td><code>down</code></td>\n</tr>\n<tr>\n<td>auto-start</td>\n<td>是否自动开始动画</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>stop-order</td>\n<td>各个数位动画停止先后顺序，值为 <code>ltr</code> 和 <code>rtl</code></td>\n<td><em>string</em></td>\n<td><code>ltr</code></td>\n</tr>\n<tr>\n<td>height</td>\n<td>数字高度，单位为 <code>px</code></td>\n<td><em>number</em></td>\n<td><code>40</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3>\n<p>通过 ref 可以获取到 RollingText 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa" target="_blank">组件实例方法</a>。</p>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>参数</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>start</td>\n<td>开始动画</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>reset</td>\n<td>重置动画</td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3>\n<p>组件导出以下类型定义：</p>\n<pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n    <span class="hljs-title class_">RollingTextProps</span>,\n    <span class="hljs-title class_">RollingTextInstance</span>,\n    <span class="hljs-title class_">RollingTextDirection</span>,\n    <span class="hljs-title class_">RollingTextStopOrder</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n</code></pre>\n<p><code>RollingTextInstance</code> 是组件实例的类型，用法如下：</p>\n<pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">RollingTextInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">const</span> rollingTextRef = ref&lt;<span class="hljs-title class_">RollingTextInstance</span>&gt;();\n\nrollingTextRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">start</span>();\n</code></pre>\n</div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2>\n<div class="mi-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3>\n<p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider" target="_blank">ConfigProvider 组件</a>。</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>--mi-rolling-text-background</td>\n<td><em>inherit</em></td>\n<td>单个数位背景色</td>\n</tr>\n<tr>\n<td>--mi-rolling-text-color</td>\n<td><em>var(--mi-text-color)</em></td>\n<td>数字颜色</td>\n</tr>\n<tr>\n<td>--mi-rolling-text-font-size</td>\n<td><em>var(--mi-font-size-md)</em></td>\n<td>字体大小</td>\n</tr>\n<tr>\n<td>--mi-rolling-text-gap</td>\n<td><em>0px</em></td>\n<td>数位之间的间隔</td>\n</tr>\n<tr>\n<td>--mi-rolling-text-item-width</td>\n<td><em>15px</em></td>\n<td>单个数位宽度</td>\n</tr>\n<tr>\n<td>--mi-rolling-text-item-border-radius</td>\n<td><em>0px</em></td>\n<td>单个数位边框圆角</td>\n</tr>\n</tbody>\n</table>\n</div>'},null,8,l))}}}]);