"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["2744"],{8110:function(s,n,t){t.r(n),t.d(n,{default:function(){return l}});var a=t(1147);let e=["innerHTML"],l={setup:()=>({html:""}),render:()=>((0,a.wg)(),(0,a.iD)("div",{class:"mi-doc-markdown-body",innerHTML:'<h1>ActionSheet 动作面板</h1>\n<div class="mi-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>底部弹起的模态面板，包含与当前情境相关的多个选项。</p>\n</div><div class="mi-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3>\n<p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce" target="_blank">组件注册</a>。</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">ActionSheet</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ActionSheet</span>);\n</code></pre>\n</div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2>\n<div class="mi-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3>\n<p>动作面板通过 <code>actions</code> 属性来定义选项，<code>actions</code> 属性是一个由对象构成的数组，数组中的每个对象配置一列，对象格式见文档下方表格。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-cell</span> <span class="hljs-attr">is-link</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;基础用法&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-action-sheet</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">:actions</span>=<span class="hljs-string">&quot;actions&quot;</span> @<span class="hljs-attr">select</span>=<span class="hljs-string">&quot;onSelect&quot;</span> /&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { showToast } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n        <span class="hljs-keyword">const</span> actions = [\n            { <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;选项一&#x27;</span> },\n            { <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;选项二&#x27;</span> },\n            { <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;选项三&#x27;</span> },\n        ];\n        <span class="hljs-keyword">const</span> <span class="hljs-title function_">onSelect</span> = (<span class="hljs-params">item</span>) =&gt; {\n            <span class="hljs-comment">// 默认情况下点击选项时不会自动收起</span>\n            <span class="hljs-comment">// 可以通过 close-on-click-action 属性开启自动收起</span>\n            show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n            <span class="hljs-title function_">showToast</span>(item.<span class="hljs-property">name</span>);\n        };\n\n        <span class="hljs-keyword">return</span> {\n            show,\n            actions,\n            onSelect,\n        };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="zhan-shi-tu-biao" tabindex="-1">展示图标</h3>\n<p>使用 <code>actions</code> 的 <code>icon</code> 字段可以为选项设置图标。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-cell</span> <span class="hljs-attr">is-link</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;展示图标&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mi-action-sheet</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">:actions</span>=<span class="hljs-string">&quot;actions&quot;</span> @<span class="hljs-attr">select</span>=<span class="hljs-string">&quot;onSelect&quot;</span> /&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { showToast } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n        <span class="hljs-keyword">const</span> actions = [\n            { <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;选项一&#x27;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;cart-o&#x27;</span> },\n            { <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;选项二&#x27;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;shop-o&#x27;</span> },\n            { <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;选项三&#x27;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;star-o&#x27;</span> },\n        ];\n        <span class="hljs-keyword">const</span> <span class="hljs-title function_">onSelect</span> = (<span class="hljs-params">item</span>) =&gt; {\n            show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n            <span class="hljs-title function_">showToast</span>(item.<span class="hljs-property">name</span>);\n        };\n\n        <span class="hljs-keyword">return</span> {\n            show,\n            actions,\n            onSelect,\n        };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="zhan-shi-qu-xiao-an-niu" tabindex="-1">展示取消按钮</h3>\n<p>设置 <code>cancel-text</code> 属性后，会在底部展示取消按钮，点击后关闭当前面板并触发 <code>cancel</code> 事件。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-action-sheet</span>\n    <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n    <span class="hljs-attr">:actions</span>=<span class="hljs-string">&quot;actions&quot;</span>\n    <span class="hljs-attr">cancel-text</span>=<span class="hljs-string">&quot;取消&quot;</span>\n    <span class="hljs-attr">close-on-click-action</span>\n    @<span class="hljs-attr">cancel</span>=<span class="hljs-string">&quot;onCancel&quot;</span>\n/&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { showToast } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n        <span class="hljs-keyword">const</span> actions = [\n            { <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;选项一&#x27;</span> },\n            { <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;选项二&#x27;</span> },\n            { <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;选项三&#x27;</span> },\n        ];\n        <span class="hljs-keyword">const</span> <span class="hljs-title function_">onCancel</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title function_">showToast</span>(<span class="hljs-string">&#x27;取消&#x27;</span>);\n\n        <span class="hljs-keyword">return</span> {\n            show,\n            actions,\n            onCancel,\n        };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="zhan-shi-miao-shu-xin-xi" tabindex="-1">展示描述信息</h3>\n<p>通过 <code>description</code> 可以在菜单顶部显示描述信息，通过选项的 <code>subname</code> 属性可以在选项文字的右侧展示描述信息。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-action-sheet</span>\n    <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n    <span class="hljs-attr">:actions</span>=<span class="hljs-string">&quot;actions&quot;</span>\n    <span class="hljs-attr">cancel-text</span>=<span class="hljs-string">&quot;取消&quot;</span>\n    <span class="hljs-attr">description</span>=<span class="hljs-string">&quot;这是一段描述信息&quot;</span>\n    <span class="hljs-attr">close-on-click-action</span>\n/&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n        <span class="hljs-keyword">const</span> actions = [\n            { <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;选项一&#x27;</span> },\n            { <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;选项二&#x27;</span> },\n            { <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;选项三&#x27;</span>, <span class="hljs-attr">subname</span>: <span class="hljs-string">&#x27;描述信息&#x27;</span> },\n        ];\n\n        <span class="hljs-keyword">return</span> {\n            show,\n            actions,\n        };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="xuan-xiang-zhuang-tai" tabindex="-1">选项状态</h3>\n<p>可以通过 <code>loading</code> 和 <code>disabled</code> 将选项设置为加载状态或禁用状态，或者通过<code>color</code>设置选项的颜色</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-action-sheet</span>\n    <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n    <span class="hljs-attr">:actions</span>=<span class="hljs-string">&quot;actions&quot;</span>\n    <span class="hljs-attr">cancel-text</span>=<span class="hljs-string">&quot;取消&quot;</span>\n    <span class="hljs-attr">close-on-click-action</span>\n/&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n        <span class="hljs-keyword">const</span> actions = [\n            { <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;着色选项&#x27;</span>, <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#ee0a24&#x27;</span> },\n            { <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;禁用选项&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span> },\n            { <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;加载选项&#x27;</span>, <span class="hljs-attr">loading</span>: <span class="hljs-literal">true</span> },\n        ];\n\n        <span class="hljs-keyword">return</span> {\n            show,\n            actions,\n        };\n    },\n};\n</code></pre>\n</div><div class="mi-doc-card"><h3 id="zi-ding-yi-mian-ban" tabindex="-1">自定义面板</h3>\n<p>通过插槽可以自定义面板的展示内容，同时可以使用<code>title</code>属性展示标题栏</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mi-action-sheet</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span>内容<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mi-action-sheet</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n    <span class="hljs-selector-class">.content</span> {\n        <span class="hljs-attribute">padding</span>: <span class="hljs-number">16px</span> <span class="hljs-number">16px</span> <span class="hljs-number">160px</span>;\n    }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="mi-doc-card"><h3 id="props" tabindex="-1">Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>v-model:show</td>\n<td>是否显示动作面板</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>actions</td>\n<td>面板选项列表</td>\n<td><em>ActionSheetAction[]</em></td>\n<td><code>[]</code></td>\n</tr>\n<tr>\n<td>title</td>\n<td>顶部标题</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>cancel-text</td>\n<td>取消按钮文字</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>description</td>\n<td>选项上方的描述信息</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>closeable</td>\n<td>是否显示关闭图标</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>close-icon</td>\n<td>关闭图标名称或图片链接，等同于 Icon 组件的 <a href="#/zh-CN/icon#props" target="_blank">name 属性</a></td>\n<td><em>string</em></td>\n<td><code>cross</code></td>\n</tr>\n<tr>\n<td>duration</td>\n<td>动画时长，单位秒，设置为 0 可以禁用动画</td>\n<td><em>number | string</em></td>\n<td><code>0.3</code></td>\n</tr>\n<tr>\n<td>z-index</td>\n<td>将面板的 z-index 层级设置为一个固定值</td>\n<td><em>number | string</em></td>\n<td><code>2000+</code></td>\n</tr>\n<tr>\n<td>round</td>\n<td>是否显示圆角</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>overlay</td>\n<td>是否显示遮罩层</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>overlay-class</td>\n<td>自定义遮罩层类名</td>\n<td><em>string | Array | object</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>overlay-style</td>\n<td>自定义遮罩层样式</td>\n<td><em>object</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>lock-scroll</td>\n<td>是否锁定背景滚动</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>lazy-render</td>\n<td>是否在显示弹层时才渲染节点</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>close-on-popstate</td>\n<td>是否在页面回退时自动关闭</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>close-on-click-action</td>\n<td>是否在点击选项后关闭</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>close-on-click-overlay</td>\n<td>是否在点击遮罩层后关闭</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>safe-area-inset-bottom</td>\n<td>是否开启<a href="#/zh-CN/advanced-usage#di-bu-an-quan-qu-gua-pei" target="_blank">底部安全区适配</a></td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>teleport</td>\n<td>指定挂载的节点，等同于 Teleport 组件的 <a href="https://cn.vuejs.org/api/built-in-components.html#teleport" target="_blank">to 属性</a></td>\n<td><em>string | Element</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>before-close</td>\n<td>关闭前的回调函数，返回 <code>false</code> 可阻止关闭，支持返回 Promise</td>\n<td><em>(action: string) =&gt; boolean | Promise&lt;boolean&gt;</em></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="action-shu-ju-jie-gou" tabindex="-1">Action 数据结构</h3>\n<p><code>actions</code> 属性是一个由对象构成的数组，数组中的每个对象配置一列，对象可以包含以下值：</p>\n<table>\n<thead>\n<tr>\n<th>键名</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>标题</td>\n<td><em>string</em></td>\n</tr>\n<tr>\n<td>subname</td>\n<td>二级标题</td>\n<td><em>string</em></td>\n</tr>\n<tr>\n<td>color</td>\n<td>选项文字颜色</td>\n<td><em>string</em></td>\n</tr>\n<tr>\n<td>icon <code>v4.8.6</code></td>\n<td>选项图标名称或图片链接</td>\n<td><em>string</em></td>\n</tr>\n<tr>\n<td>className</td>\n<td>为对应列添加额外的 class</td>\n<td><em>string | Array | object</em></td>\n</tr>\n<tr>\n<td>loading</td>\n<td>是否为加载状态</td>\n<td><em>boolean</em></td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>是否为禁用状态</td>\n<td><em>boolean</em></td>\n</tr>\n<tr>\n<td>callback</td>\n<td>点击时触发的回调函数</td>\n<td><em>action: ActionSheetAction</em></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="events" tabindex="-1">Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>select</td>\n<td>点击选项时触发，禁用或加载状态下不会触发</td>\n<td><em>action: ActionSheetAction, index: number</em></td>\n</tr>\n<tr>\n<td>cancel</td>\n<td>点击取消按钮时触发</td>\n<td>-</td>\n</tr>\n<tr>\n<td>open</td>\n<td>打开面板时触发</td>\n<td>-</td>\n</tr>\n<tr>\n<td>close</td>\n<td>关闭面板时触发</td>\n<td>-</td>\n</tr>\n<tr>\n<td>opened</td>\n<td>打开面板且动画结束后触发</td>\n<td>-</td>\n</tr>\n<tr>\n<td>closed</td>\n<td>关闭面板且动画结束后触发</td>\n<td>-</td>\n</tr>\n<tr>\n<td>click-overlay</td>\n<td>点击遮罩层时触发</td>\n<td><em>event: MouseEvent</em></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="slots" tabindex="-1">Slots</h3>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n<th>参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>default</td>\n<td>自定义面板的展示内容</td>\n<td>-</td>\n</tr>\n<tr>\n<td>description</td>\n<td>自定义描述文案</td>\n<td>-</td>\n</tr>\n<tr>\n<td>cancel</td>\n<td>自定义取消按钮内容</td>\n<td>-</td>\n</tr>\n<tr>\n<td>action</td>\n<td>自定义选项内容</td>\n<td><em>{ action: ActionSheetAction, index: number }</em></td>\n</tr>\n</tbody>\n</table>\n</div><div class="mi-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3>\n<p>组件导出以下类型定义：</p>\n<pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ActionSheetProps</span>, <span class="hljs-title class_">ActionSheetAction</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@miracle-web/ui&#x27;</span>;\n</code></pre>\n</div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2>\n<div class="mi-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3>\n<p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider" target="_blank">ConfigProvider 组件</a>。</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>--mi-action-sheet-max-height</td>\n<td><em>80%</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-sheet-header-height</td>\n<td><em>48px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-sheet-header-font-size</td>\n<td><em>var(--mi-font-size-lg)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-sheet-description-color</td>\n<td><em>var(--mi-text-color-2)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-sheet-description-font-size</td>\n<td><em>var(--mi-font-size-md)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-sheet-description-line-height</td>\n<td><em>var(--mi-line-height-md)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-sheet-item-background</td>\n<td><em>var(--mi-background-2)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-sheet-item-font-size</td>\n<td><em>var(--mi-font-size-lg)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-sheet-item-line-height</td>\n<td><em>var(--mi-line-height-lg)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-sheet-item-text-color</td>\n<td><em>var(--mi-text-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-sheet-item-disabled-text-color</td>\n<td><em>var(--mi-text-color-3)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-sheet-item-icon-size</td>\n<td><em>18px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-sheet-item-icon-margin-right</td>\n<td><em>var(--mi-padding-xs)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-sheet-subname-color</td>\n<td><em>var(--mi-text-color-2)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-sheet-subname-font-size</td>\n<td><em>var(--mi-font-size-sm)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-sheet-subname-line-height</td>\n<td><em>var(--mi-line-height-sm)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-sheet-close-icon-size</td>\n<td><em>22px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-sheet-close-icon-color</td>\n<td><em>var(--mi-gray-5)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-sheet-close-icon-padding</td>\n<td><em>0 var(--mi-padding-md)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-sheet-cancel-text-color</td>\n<td><em>var(--mi-gray-7)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-sheet-cancel-padding-top</td>\n<td><em>var(--mi-padding-xs)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-sheet-cancel-padding-color</td>\n<td><em>var(--mi-background)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--mi-action-sheet-loading-icon-size</td>\n<td><em>22px</em></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div>'},null,8,e))}}}]);