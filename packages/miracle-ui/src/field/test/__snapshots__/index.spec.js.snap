// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`should change clear icon when using clear-icon prop 1`] = `
"<i class="mi-badge__wrapper mi-icon mi-icon-cross mi-field__clear">
  <!---->
  <!---->
  <!---->
</i>"
`;

exports[`should render colon when using colon prop 1`] = `
<div class="mi-cell__title mi-field__label">
  <label
    id="mi-field-label"
    for="mi-field-input"
  >
    foo:
  </label>
</div>
`;

exports[`should render error-message slot correctly 1`] = `
<div class="mi-field__error-message">
  Custom error
</div>
`;

exports[`should render extra slot correctly 1`] = `
<div class="mi-cell mi-field">
  <div class="mi-cell__value mi-field__value">
    <div class="mi-field__body">
      <input
        type="text"
        id="mi-field-input"
        class="mi-field__control"
      >
    </div>
  </div>
  Extra
</div>
`;

exports[`should render input slot correctly 1`] = `
<div class="mi-field__control mi-field__control--custom">
  Custom Input
</div>
`;

exports[`should render label correctly when dynamically set empty label 1`] = `
<div class="mi-cell__title mi-field__label">
  <label
    id="mi-field-label"
    for="mi-field-input"
  >
    abc
  </label>
</div>
`;

exports[`should render label slot correctly 1`] = `
<div class="mi-cell__title mi-field__label">
  Custom Label
</div>
`;

exports[`should render left icon inside label when label-align is top 1`] = `
<div class="mi-cell mi-field mi-field--label-top">
  <div class="mi-cell__title mi-field__label mi-field__label--top">
    <div class="mi-field__left-icon">
      <i class="mi-badge__wrapper mi-icon mi-icon-success">
      </i>
    </div>
    <label
      id="mi-field-label"
      for="mi-field-input"
    >
      Label
    </label>
  </div>
  <div class="mi-cell__value mi-field__value">
    <div class="mi-field__body">
      <input
        type="text"
        id="mi-field-input"
        class="mi-field__control"
        aria-labelledby="mi-field-label"
      >
    </div>
  </div>
</div>
`;

exports[`should render textarea when type is textarea 1`] = `
<div class="mi-cell mi-field">
  <div class="mi-cell__value mi-field__value">
    <div class="mi-field__body">
      <textarea
        id="mi-field-input"
        class="mi-field__control"
        style="height: auto;"
      >
      </textarea>
    </div>
  </div>
</div>
`;

exports[`should render word limit correctly 1`] = `
<div class="mi-field__word-limit">
  <span class="mi-field__word-num">
    3
  </span>
  /3
</div>
`;

exports[`should render word limit correctly when modelValue is null 1`] = `
<div class="mi-cell mi-field">
  <div class="mi-cell__value mi-field__value">
    <div class="mi-field__body">
      <input
        type="text"
        id="mi-field-input"
        class="mi-field__control"
      >
    </div>
    <div class="mi-field__word-limit">
      <span class="mi-field__word-num">
        0
      </span>
      /3
    </div>
  </div>
</div>
`;

exports[`should render word limit correctly when modelValue is undefined 1`] = `
<div class="mi-cell mi-field">
  <div class="mi-cell__value mi-field__value">
    <div class="mi-field__body">
      <input
        type="text"
        id="mi-field-input"
        class="mi-field__control"
      >
    </div>
    <div class="mi-field__word-limit">
      <span class="mi-field__word-num">
        0
      </span>
      /3
    </div>
  </div>
</div>
`;

exports[`should render word limit with emoji correctly 1`] = `
<div class="mi-field__word-limit">
  <span class="mi-field__word-num">
    2
  </span>
  /3
</div>
`;
